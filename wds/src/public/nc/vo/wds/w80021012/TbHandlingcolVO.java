  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.wds.w80021012;
   	
	import java.util.ArrayList;
	import nc.vo.pub.*;
	import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2010-10-14
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class TbHandlingcolVO extends SuperVO {
           
             public String pk_invbasdoc;
             public UFDouble chargecol;
             public Integer dr;
             public String vdef3;
             public String bz;
             public String vdef2;
             public String pk_vdef2;
             public String pk_vdef3;
             public UFTime ts;
             public String pk_vdef1;
             public String vdef1;
             public String pk_handlingcol;
            
             public static final String  PK_INVBASDOC="pk_invbasdoc";   
             public static final String  CHARGECOL="chargecol";   
             public static final String  DR="dr";   
             public static final String  VDEF3="vdef3";    
             public static final String  BZ="bz";   
             public static final String  VDEF2="vdef2";   
             public static final String  PK_VDEF2="pk_vdef2";   
             public static final String  PK_VDEF3="pk_vdef3";   
             public static final String  TS="ts";   
             public static final String  PK_VDEF1="pk_vdef1";   
             public static final String  VDEF1="vdef1";   
             public static final String  PK_HANDLINGCOL="pk_handlingcol";   
      
    
        /**
	   * 属性invcode的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return String
	   */
	 public String getPk_invbasdoc() {
		 return pk_invbasdoc;
	  }   
	  
     /**
	   * 属性invcode的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newInvcode String
	   */
	public void setPk_invbasdoc(String newPk_invbasdoc) {
		
		pk_invbasdoc = newPk_invbasdoc;
	 } 	  
       
        /**
	   * 属性chargecol的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return UFDouble
	   */
	 public UFDouble getChargecol() {
		 return chargecol;
	  }   
	  
     /**
	   * 属性chargecol的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newChargecol UFDouble
	   */
	public void setChargecol(UFDouble newChargecol) {
		
		chargecol = newChargecol;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性vdef3的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return String
	   */
	 public String getVdef3() {
		 return vdef3;
	  }   
	  
     /**
	   * 属性vdef3的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newVdef3 String
	   */
	public void setVdef3(String newVdef3) {
		
		vdef3 = newVdef3;
	 } 	  
       
  
       
        /**
	   * 属性bz的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return String
	   */
	 public String getBz() {
		 return bz;
	  }   
	  
     /**
	   * 属性bz的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newBz String
	   */
	public void setBz(String newBz) {
		
		bz = newBz;
	 } 	  
       
        /**
	   * 属性vdef2的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return String
	   */
	 public String getVdef2() {
		 return vdef2;
	  }   
	  
     /**
	   * 属性vdef2的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newVdef2 String
	   */
	public void setVdef2(String newVdef2) {
		
		vdef2 = newVdef2;
	 } 	  
       
        /**
	   * 属性pk_vdef2的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return String
	   */
	 public String getPk_vdef2() {
		 return pk_vdef2;
	  }   
	  
     /**
	   * 属性pk_vdef2的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newPk_vdef2 String
	   */
	public void setPk_vdef2(String newPk_vdef2) {
		
		pk_vdef2 = newPk_vdef2;
	 } 	  
       
        /**
	   * 属性pk_vdef3的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return String
	   */
	 public String getPk_vdef3() {
		 return pk_vdef3;
	  }   
	  
     /**
	   * 属性pk_vdef3的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newPk_vdef3 String
	   */
	public void setPk_vdef3(String newPk_vdef3) {
		
		pk_vdef3 = newPk_vdef3;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return UFDateTime
	   */
	 public UFTime getTs() {
		 return ts;
	  }   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newTs UFDateTime
	   */
	public void setTs(UFTime newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性pk_vdef1的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return String
	   */
	 public String getPk_vdef1() {
		 return pk_vdef1;
	  }   
	  
     /**
	   * 属性pk_vdef1的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newPk_vdef1 String
	   */
	public void setPk_vdef1(String newPk_vdef1) {
		
		pk_vdef1 = newPk_vdef1;
	 } 	  
       
        /**
	   * 属性vdef1的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return String
	   */
	 public String getVdef1() {
		 return vdef1;
	  }   
	  
     /**
	   * 属性vdef1的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newVdef1 String
	   */
	public void setVdef1(String newVdef1) {
		
		vdef1 = newVdef1;
	 } 	  
       
        /**
	   * 属性pk_handlingcol的Getter方法.
	   *
	   * 创建日期:2010-10-14
	   * @return String
	   */
	 public String getPk_handlingcol() {
		 return pk_handlingcol;
	  }   
	  
     /**
	   * 属性pk_handlingcol的Setter方法.
	   *
	   * 创建日期:2010-10-14
	   * @param newPk_handlingcol String
	   */
	public void setPk_handlingcol(String newPk_handlingcol) {
		
		pk_handlingcol = newPk_handlingcol;
	 } 	  
      
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2010-10-14
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_handlingcol == null) {
			errFields.add(new String("pk_handlingcol"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2010-10-14
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2010-10-14
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_handlingcol";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2010-10-14
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "tb_handlingcol";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2010-10-14
	  */
	public TbHandlingcolVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2010-10-14
	 * @param newPk_handlingcol 主键值
	 */
	 public TbHandlingcolVO(String newPk_handlingcol) {
		
		// 为主键字段赋值:
		 pk_handlingcol = newPk_handlingcol;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2010-10-14
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_handlingcol;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2010-10-14
	  * @param newPk_handlingcol  String    
	  */
	 public void setPrimaryKey(String newPk_handlingcol) {
				
				pk_handlingcol = newPk_handlingcol; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2010-10-14
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "tb_handlingcol"; 
				
	 } 
} 
