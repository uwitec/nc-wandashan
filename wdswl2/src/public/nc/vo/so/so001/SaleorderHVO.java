/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
 \***************************************************************/

package nc.vo.so.so001;

//zhf modify for  不支持数字型自定义项  产品bug


import java.util.ArrayList;

import nc.vo.pub.CircularlyAccessibleValueObject;
import nc.vo.pub.NullFieldException;
import nc.vo.pub.ValidationException;
import nc.vo.pub.lang.UFBoolean;
import nc.vo.pub.lang.UFDate;
import nc.vo.pub.lang.UFDateTime;
import nc.vo.pub.lang.UFDouble;
import nc.vo.scm.print.PrintConst;
import nc.vo.scm.print.ScmPrintlogVO;
import nc.vo.scm.pu.PuPubVO;
import nc.vo.so.pub.ISoPrintCount;

/**
 * 此处插入类型说明。
 * 
 * 创建日期：(2001-5-11)
 * 
 * @author： 
 * 
 * 修改日期：2003-10-16 修改人：杨涛
 * 
 * 修改内容：表头增加预收款比例（npreceiverate）和预收款金额（npreceivemny）
 *           
 */
public class SaleorderHVO extends CircularlyAccessibleValueObject implements
		ISoPrintCount {
	
	public String m_csaleid;

	public UFDouble m_nheadsummny;
	
	public String m_pk_corp;

	public String m_vreceiptcode;

	public String m_creceipttype;

	public String m_cbiztype;

	public Integer m_finvoiceclass;

	public Integer m_finvoicetype;

	public String m_vaccountyear;

	public UFBoolean m_binitflag;

	public UFDate m_dbilldate;

	public String m_ccustomerid;

	public String m_cdeptid;

	public String m_cemployeeid;

	public String m_coperatorid;

	public String m_ctermprotocolid;

	public String m_csalecorpid;

	public String m_creceiptcustomerid;

	public String m_vreceiveaddress;

	public String m_creceiptcorpid;

	public String m_ctransmodeid;

	public UFDouble m_ndiscountrate;

	public String m_cwarehouseid;

	public String m_veditreason;

	public UFBoolean m_bfreecustflag;

	public String m_cfreecustid;

	public Integer m_ibalanceflag;

	public UFDouble m_nsubscription; //定金订单预收款

	public String m_ccreditnum;

	public UFDouble m_nevaluatecarriage;

	public UFDate m_dmakedate;
	
	public UFDateTime m_timenew;
	
	public UFDateTime m_timeaudit;

	public String m_capproveid;

	public UFDate m_dapprovedate;

	public Integer m_fstatus;

	public String m_vnote;

	public String m_vdef1;

	public String m_vdef2;

	public String m_vdef3;

	public String m_vdef4;

	public String m_vdef5;

	public String m_vdef6;

	public String m_vdef7;

	public String m_vdef8;

	public String m_vdef9;

	public String m_vdef10;
	//v5增加时间字段
	public UFDateTime m_dbilltime;
	public UFDateTime m_daudittime;
	public UFDateTime m_dmoditime;

	//nc30 add
	private transient static SOField[] addFields = null;

	private transient static java.util.HashMap arrhs = null;

	//nc30
	public transient static final String[] attributeNames = 
		new String[] {
			"csaleid", 
			"ccalbodyid", 
			"pk_corp", 
			"vreceiptcode", 
			"creceipttype",
			"cbiztype", 
			"finvoiceclass", 
			"finvoicetype", 
			"vaccountyear",
			"binitflag", 
			"dbilldate", 
			"ccustomerid", 
			"cdeptid", 
			"cemployeeid",
			"coperatorid", 
			"ctermprotocolid", 
			"csalecorpid",
			"creceiptcustomerid", 
			"vreceiveaddress", 
			"creceiptcorpid",
			"ctransmodeid", 
			"ndiscountrate", 
			"cwarehouseid", 
			"veditreason",
			"bfreecustflag", 
			"cfreecustid", 
			"ibalanceflag", 
			"nsubscription",
			"ccreditnum", 
			"nevaluatecarriage", 
			"dmakedate", 
			"capproveid",
			"dapprovedate", 
			"bretinvflag", 
			"boutendflag", 
			"binvoicendflag",
			"breceiptendflag", 
			"fstatus", 
			"vnote", 
			"vdef1", 
			"vdef2", 
			"vdef3",
			"vdef4", 
			"vdef5", 
			"vdef6", 
			"vdef7", 
			"vdef8", 
			"vdef9", 
			"vdef10",
			"ts", 
			nc.vo.scm.recordtime.TimeAttributeName.TIME,
			nc.vo.scm.recordtime.TimeAttributeName.BILLTYPE,
			nc.vo.scm.recordtime.TimeAttributeName.BILLID,
			nc.vo.scm.recordtime.TimeAttributeName.PKCORP,
			nc.vo.scm.recordtime.TimeAttributeName.OPERATORID,
			nc.vo.scm.recordtime.TimeAttributeName.FIRSTBILLID, 
			"bcodechanged",
			"voldreceiptcode", 
			"npreceiverate", 
			"npreceivemny", 
			"ccalbodyname",
			"ccurrencytypeid", 
			"nexchangeotoarate", 
			"nexchangeotobrate",
			"ccustomername", 
			"cdeptname", 
			"cemployeename", 
			"cfreecustname",
			"creceiptcorpname", 
			"creceiptcustomername",
			"csalecorpname",
			"ctermprotocolname",
			"ctransmodename",
			"cwarehousename",
			"ntaxrate",
			"capprovename",
			"coperatorname",
			"nreceiptcathmny",
			"btransendflag",
			"naccountperiod",
			"boverdate",
			"salecorp",
			"bpayendflag",
			"cbiztypename",
			"iprintcount",
			"bdeliver" ,
			
			
			//新增的自定义项
			"vdef11",
			"vdef12",
			"vdef13",
			"vdef14",
			"vdef15",
			"vdef16",
			"vdef17",
			"vdef18",
			"vdef19",
			"vdef20",
			
			//新增的自定义项pk
			"pk_defdoc1",
			"pk_defdoc2",
			"pk_defdoc3",
			"pk_defdoc4",
			"pk_defdoc5",
			"pk_defdoc6",
			"pk_defdoc7",
			"pk_defdoc8",
			"pk_defdoc9",
			"pk_defdoc10",
			"pk_defdoc11",
			"pk_defdoc12",
			"pk_defdoc13",
			"pk_defdoc14",
			"pk_defdoc15",
			"pk_defdoc16",
			"pk_defdoc17",
			"pk_defdoc18",
			"pk_defdoc19",
			"pk_defdoc20",
			"timenew",
			"timeaudit",
			"dbilltime",
			"daudittime",
			"dmoditime",
			"nheadsummny",

			"errMsg"
		};

	public UFBoolean boverdate;//是否超帐期

	public UFBoolean btransendflag; //运输结束标志

	public transient String capprovename; //审批人

	//yb add
	public transient String ccalbodyname; //库存组织

	public String m_ccurrencytypeid; //币种

	public transient String ccustomername; //客户

	public transient String cdeptname; //部门

	public transient String cemployeename; //业务员

	public transient String cfreecustname; //散户

	public transient String coperatorname; //制单人

	public transient String creceiptcorpname; //开票单位

	public transient String creceiptcustomername; //收货单位

	public transient String csalecorpname; //销售组织

	public transient String ctermprotocolname; //收款协议

	public transient String ctransmodename; //发运方式

	public transient String cwarehousename; //仓库

	//发票号是否改变
	public boolean m_bcodechanged;

	public UFBoolean m_binvoicendflag;

	public UFBoolean m_boutendflag;

	public UFBoolean m_breceiptendflag;

	public UFBoolean m_bretinvflag;

	//
	public String m_ccalbodyid;

	public UFDouble m_npreceivemny; //预收款金额

	//yt add 2003-10-16
	public UFDouble m_npreceiverate; //预收款比例

	//
	public UFDateTime m_time;

	//
	public UFDateTime m_ts;

	//修改前单据号
	public String m_voldreceiptcode;

	//nc30
	public UFDouble naccountperiod; //帐期

	public transient UFDouble nexchangeotoarate; //折辅汇率

	public transient UFDouble m_nexchangeotobrate; //折本汇率

	public UFDouble nreceiptcathmny; //收现款金额

	public transient UFDouble ntaxrate; //整单税率
	
	public UFBoolean bdeliver;//是否发运

	public transient String cbiztypename;//业务类型名称

	//NC31
	public Integer iprintcount; //打印次数

	public UFBoolean m_bpayendflag;

	public transient String salecorp;//销售公司名称
	
	//	新增的自定义项
	public String vdef11;
	public String vdef12;
	public String vdef13;
	public String vdef14;
	public String vdef15;
	public String vdef16;
	public String vdef17;
	public String vdef18;
	public String vdef19;
	public String vdef20;
	
	//新增的自定义项pk
	public String pk_defdoc1;
	public String pk_defdoc2;
	public String pk_defdoc3;
	public String pk_defdoc4;
	public String pk_defdoc5;
	public String pk_defdoc6;
	public String pk_defdoc7;
	public String pk_defdoc8;
	public String pk_defdoc9;
	public String pk_defdoc10;
	public String pk_defdoc11;
	public String pk_defdoc12;
	public String pk_defdoc13;
	public String pk_defdoc14;
	public String pk_defdoc15;
	public String pk_defdoc16;
	public String pk_defdoc17;
	public String pk_defdoc18;
	public String pk_defdoc19;
	public String pk_defdoc20;
	
	public SaleorderHVO oldhvo = null;
			

	/**
	 * 使用主键字段进行初始化的构造子。
	 * 
	 * 创建日期：(2001-5-11)
	 */
	public SaleorderHVO() {

	}

	/**
	 * 使用主键进行初始化的构造子。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param ??fieldNameForMethod??
	 *            主键值
	 */
	public SaleorderHVO(String newCsaleid) {

		// 为主键字段赋值:
		m_csaleid = newCsaleid;

	}

	/**
	 * 根类Object的方法,克隆这个VO对象。
	 * 
	 * 创建日期：(2001-5-11)
	 */
	public Object clone() {

		// 复制基类内容并创建新的VO对象：
		Object o = null;
		try {
			o = super.clone();
		} catch (Exception e) {
		}
		SaleorderHVO sale = (SaleorderHVO) o;

		// 你在下面复制本VO对象的所有属性：

		return sale;
	}

	/**
	 * 返回数值对象的显示名称。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return java.lang.String 返回数值对象的显示名称。
	 */
	public String getEntityName() {

		return "Sale";
	}

	/**
	 * 返回对象标识，用来唯一定位对象。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getPrimaryKey() {

		return m_csaleid;
	}

	/**
	 * 设置对象标识，用来唯一定位对象。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param m_csaleid
	 *            String
	 */
	public void setPrimaryKey(String newCsaleid) {

		m_csaleid = newCsaleid;
	}

	/**
	 * 属性m_csaleid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCsaleid() {
		return m_csaleid;
	}

	/**
	 * 属性m_pk_corp的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getPk_corp() {
		return m_pk_corp;
	}

	/**
	 * 属性m_vreceiptcode的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVreceiptcode() {
		return m_vreceiptcode;
	}

	/**
	 * 属性m_creceipttype的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCreceipttype() {
		return m_creceipttype;
	}

	/**
	 * 属性m_cbiztype的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCbiztype() {
		return m_cbiztype;
	}

	/**
	 * 属性m_finvoiceclass的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return Integer
	 */
	public Integer getFinvoiceclass() {
		return m_finvoiceclass;
	}

	/**
	 * 属性m_finvoicetype的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return Integer
	 */
	public Integer getFinvoicetype() {
		return m_finvoicetype;
	}

	/**
	 * 属性m_vaccountyear的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVaccountyear() {
		return m_vaccountyear;
	}

	/**
	 * 属性m_binitflag的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getBinitflag() {
		return m_binitflag;
	}

	/**
	 * 属性m_dbilldate的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFDate
	 */
	public UFDate getDbilldate() {
		return m_dbilldate;
	}

	/**
	 * 属性m_ccustomerid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCcustomerid() {
		return m_ccustomerid;
	}

	/**
	 * 属性m_cdeptid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCdeptid() {
		return m_cdeptid;
	}

	/**
	 * 属性m_cemployeeid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCemployeeid() {
		return m_cemployeeid;
	}

	/**
	 * 属性m_coperatorid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCoperatorid() {
		return m_coperatorid;
	}

	/**
	 * 属性m_ctermprotocolid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCtermprotocolid() {
		return m_ctermprotocolid;
	}

	/**
	 * 属性m_csalecorpid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCsalecorpid() {
		return m_csalecorpid;
	}

	/**
	 * 属性m_creceiptcustomerid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCreceiptcustomerid() {
		return m_creceiptcustomerid;
	}

	/**
	 * 属性m_vreceiveaddress的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVreceiveaddress() {
		return m_vreceiveaddress;
	}

	/**
	 * 属性m_creceiptcorpid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCreceiptcorpid() {
		return m_creceiptcorpid;
	}

	/**
	 * 属性m_ctransmodeid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCtransmodeid() {
		return m_ctransmodeid;
	}

	/**
	 * 属性m_ndiscountrate的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFDouble
	 */
	public UFDouble getNdiscountrate() {
		return m_ndiscountrate;
	}

	/**
	 * 属性m_cwarehouseid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCwarehouseid() {
		return m_cwarehouseid;
	}

	/**
	 * 属性m_veditreason的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVeditreason() {
		return m_veditreason;
	}

	/**
	 * 属性m_bfreecustflag的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getBfreecustflag() {
		return m_bfreecustflag;
	}

	/**
	 * 属性m_cfreecustid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCfreecustid() {
		return m_cfreecustid;
	}

	/**
	 * 属性m_ibalanceflag的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return Integer
	 */
	public Integer getIbalanceflag() {
		return m_ibalanceflag;
	}

	/**
	 * 属性m_nsubscription的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFDouble
	 */
	public UFDouble getNsubscription() {
		return m_nsubscription;
	}

	/**
	 * 属性m_ccreditnum的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCcreditnum() {
		return m_ccreditnum;
	}

	/**
	 * 属性m_nevaluatecarriage的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFDouble
	 */
	public UFDouble getNevaluatecarriage() {
		return m_nevaluatecarriage;
	}

	/**
	 * 属性m_dmakedate的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFDate
	 */
	public UFDate getDmakedate() {
		return m_dmakedate;
	}
	public UFDateTime  getTimenew() {
		return m_timenew ;
	}
	public UFDateTime  getTimeaudit() {
		return m_timeaudit ;
	}
	
	
	/**
	 * 属性m_capproveid的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCapproveid() {
		return m_capproveid;
	}

	/**
	 * 属性m_dapprovedate的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFDate
	 */
	public UFDate getDapprovedate() {
		return m_dapprovedate;
	}

	/**
	 * 属性m_fstatus的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return Integer
	 */
	public Integer getFstatus() {
		return m_fstatus;
	}

	/**
	 * 属性m_vnote的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVnote() {
		return m_vnote;
	}

	/**
	 * 属性m_vdef1的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef1() {
		return m_vdef1;
	}

	/**
	 * 属性m_vdef2的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef2() {
		return m_vdef2;
	}

	/**
	 * 属性m_vdef3的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef3() {
		return m_vdef3;
	}

	/**
	 * 属性m_vdef4的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef4() {
		return m_vdef4;
	}

	/**
	 * 属性m_vdef5的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef5() {
		return m_vdef5;
	}

	/**
	 * 属性m_vdef6的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef6() {
		return m_vdef6;
	}

	/**
	 * 属性m_vdef7的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef7() {
		return m_vdef7;
	}

	/**
	 * 属性m_vdef8的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef8() {
		return m_vdef8;
	}

	/**
	 * 属性m_vdef9的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef9() {
		return m_vdef9;
	}

	/**
	 * 属性m_vdef10的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVdef10() {
		return m_vdef10;
	}

	/**
	 * 属性m_csaleid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_csaleid
	 *            String
	 */
	public void setCsaleid(String newCsaleid) {

		m_csaleid = newCsaleid;
	}

	/**
	 * 属性m_pk_corp的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_pk_corp
	 *            String
	 */
	public void setPk_corp(String newPk_corp) {

		m_pk_corp = newPk_corp;
	}

	/**
	 * 属性m_vreceiptcode的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vreceiptcode
	 *            String
	 */
	public void setVreceiptcode(String newVreceiptcode) {

		m_vreceiptcode = newVreceiptcode;
	}

	/**
	 * 属性m_creceipttype的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_creceipttype
	 *            String
	 */
	public void setCreceipttype(String newCreceipttype) {

		m_creceipttype = newCreceipttype;
	}

	/**
	 * 属性m_cbiztype的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_cbiztype
	 *            String
	 */
	public void setCbiztype(String newCbiztype) {

		m_cbiztype = newCbiztype;
	}

	/**
	 * 属性m_finvoiceclass的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_finvoiceclass
	 *            Integer
	 */
	public void setFinvoiceclass(Integer newFinvoiceclass) {

		m_finvoiceclass = newFinvoiceclass;
	}

	/**
	 * 属性m_finvoicetype的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_finvoicetype
	 *            Integer
	 */
	public void setFinvoicetype(Integer newFinvoicetype) {

		m_finvoicetype = newFinvoicetype;
	}

	/**
	 * 属性m_vaccountyear的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vaccountyear
	 *            String
	 */
	public void setVaccountyear(String newVaccountyear) {

		m_vaccountyear = newVaccountyear;
	}

	/**
	 * 属性m_binitflag的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_binitflag
	 *            UFBoolean
	 */
	public void setBinitflag(UFBoolean newBinitflag) {

		m_binitflag = newBinitflag;
	}

	/**
	 * 属性m_dbilldate的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_dbilldate
	 *            UFDate
	 */
	public void setDbilldate(UFDate newDbilldate) {

		m_dbilldate = newDbilldate;
	}

	/**
	 * 属性m_ccustomerid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_ccustomerid
	 *            String
	 */
	public void setCcustomerid(String newCcustomerid) {

		m_ccustomerid = newCcustomerid;
	}

	/**
	 * 属性m_cdeptid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_cdeptid
	 *            String
	 */
	public void setCdeptid(String newCdeptid) {

		m_cdeptid = newCdeptid;
	}

	/**
	 * 属性m_cemployeeid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_cemployeeid
	 *            String
	 */
	public void setCemployeeid(String newCemployeeid) {

		m_cemployeeid = newCemployeeid;
	}

	/**
	 * 属性m_coperatorid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_coperatorid
	 *            String
	 */
	public void setCoperatorid(String newCoperatorid) {

		m_coperatorid = newCoperatorid;
	}

	/**
	 * 属性m_ctermprotocolid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_ctermprotocolid
	 *            String
	 */
	public void setCtermprotocolid(String newCtermprotocolid) {

		m_ctermprotocolid = newCtermprotocolid;
	}

	/**
	 * 属性m_csalecorpid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_csalecorpid
	 *            String
	 */
	public void setCsalecorpid(String newCsalecorpid) {

		m_csalecorpid = newCsalecorpid;
	}

	/**
	 * 属性m_creceiptcustomerid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_creceiptcustomerid
	 *            String
	 */
	public void setCreceiptcustomerid(String newCreceiptcustomerid) {

		m_creceiptcustomerid = newCreceiptcustomerid;
	}

	/**
	 * 属性m_vreceiveaddress的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vreceiveaddress
	 *            String
	 */
	public void setVreceiveaddress(String newVreceiveaddress) {

		m_vreceiveaddress = newVreceiveaddress;
	}

	/**
	 * 属性m_creceiptcorpid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_creceiptcorpid
	 *            String
	 */
	public void setCreceiptcorpid(String newCreceiptcorpid) {

		m_creceiptcorpid = newCreceiptcorpid;
	}

	/**
	 * 属性m_ctransmodeid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_ctransmodeid
	 *            String
	 */
	public void setCtransmodeid(String newCtransmodeid) {

		m_ctransmodeid = newCtransmodeid;
	}

	/**
	 * 属性m_ndiscountrate的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_ndiscountrate
	 *            UFDouble
	 */
	public void setNdiscountrate(UFDouble newNdiscountrate) {

		m_ndiscountrate = newNdiscountrate;
	}

	/**
	 * 属性m_cwarehouseid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_cwarehouseid
	 *            String
	 */
	public void setCwarehouseid(String newCwarehouseid) {

		m_cwarehouseid = newCwarehouseid;
	}

	/**
	 * 属性m_veditreason的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_veditreason
	 *            String
	 */
	public void setVeditreason(String newVeditreason) {

		m_veditreason = newVeditreason;
	}

	/**
	 * 属性m_bfreecustflag的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_bfreecustflag
	 *            UFBoolean
	 */
	public void setBfreecustflag(UFBoolean newBfreecustflag) {

		m_bfreecustflag = newBfreecustflag;
	}

	/**
	 * 属性m_cfreecustid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_cfreecustid
	 *            String
	 */
	public void setCfreecustid(String newCfreecustid) {

		m_cfreecustid = newCfreecustid;
	}

	/**
	 * 属性m_ibalanceflag的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_ibalanceflag
	 *            Integer
	 */
	public void setIbalanceflag(Integer newIbalanceflag) {

		m_ibalanceflag = newIbalanceflag;
	}

	/**
	 * 属性m_nsubscription的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_nsubscription
	 *            UFDouble
	 */
	public void setNsubscription(UFDouble newNsubscription) {

		m_nsubscription = newNsubscription;
	}

	/**
	 * 属性m_ccreditnum的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_ccreditnum
	 *            String
	 */
	public void setCcreditnum(String newCcreditnum) {

		m_ccreditnum = newCcreditnum;
	}

	/**
	 * 属性m_nevaluatecarriage的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_nevaluatecarriage
	 *            UFDouble
	 */
	public void setNevaluatecarriage(UFDouble newNevaluatecarriage) {

		m_nevaluatecarriage = newNevaluatecarriage;
	}

	/**
	 * 属性m_dmakedate的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_dmakedate
	 *            UFDate
	 */
	public void setDmakedate(UFDate newDmakedate) {

		m_dmakedate = newDmakedate;
	}
	public void setTimenew(UFDateTime  newtimenew) {

		m_timenew  = newtimenew;
	}
	public void setTimeaudit(UFDateTime  newtimeaudit) {

		m_timeaudit  = newtimeaudit;
	}
	
	/**
	 * 属性m_capproveid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_capproveid
	 *            String
	 */
	public void setCapproveid(String newCapproveid) {

		m_capproveid = newCapproveid;
	}

	/**
	 * 属性m_dapprovedate的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_dapprovedate
	 *            UFDate
	 */
	public void setDapprovedate(UFDate newDapprovedate) {

		m_dapprovedate = newDapprovedate;
	}

	/**
	 * 属性m_fstatus的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_fstatus
	 *            Integer
	 */
	public void setFstatus(Integer newFstatus) {

		m_fstatus = newFstatus;
	}

	/**
	 * 属性m_vnote的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vnote
	 *            String
	 */
	public void setVnote(String newVnote) {

		m_vnote = newVnote;
	}

	/**
	 * 属性m_vdef1的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef1
	 *            String
	 */
	public void setVdef1(String newVdef1) {

		m_vdef1 = newVdef1;
	}

	/**
	 * 属性m_vdef2的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef2
	 *            String
	 */
	public void setVdef2(String newVdef2) {

		m_vdef2 = newVdef2;
	}

	/**
	 * 属性m_vdef3的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef3
	 *            String
	 */
	public void setVdef3(String newVdef3) {

		m_vdef3 = newVdef3;
	}

	/**
	 * 属性m_vdef4的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef4
	 *            String
	 */
	public void setVdef4(String newVdef4) {

		m_vdef4 = newVdef4;
	}

	/**
	 * 属性m_vdef5的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef5
	 *            String
	 */
	public void setVdef5(String newVdef5) {

		m_vdef5 = newVdef5;
	}

	/**
	 * 属性m_vdef6的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef6
	 *            String
	 */
	public void setVdef6(String newVdef6) {

		m_vdef6 = newVdef6;
	}

	/**
	 * 属性m_vdef7的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef7
	 *            String
	 */
	public void setVdef7(String newVdef7) {

		m_vdef7 = newVdef7;
	}

	/**
	 * 属性m_vdef8的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef8
	 *            String
	 */
	public void setVdef8(String newVdef8) {

		m_vdef8 = newVdef8;
	}

	/**
	 * 属性m_vdef9的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef9
	 *            String
	 */
	public void setVdef9(String newVdef9) {

		m_vdef9 = newVdef9;
	}

	/**
	 * 属性m_vdef10的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vdef10
	 *            String
	 */
	public void setVdef10(String newVdef10) {

		m_vdef10 = newVdef10;
	}

	/**
	 * 验证对象各属性之间的数据逻辑正确性。
	 * 
	 * 创建日期：(2001-4-20)
	 * 
	 * @exception nc.vo.pub.ValidationException
	 *                如果验证失败，抛出 ValidationException，对错误进行解释。
	 */
	public void validate() throws ValidationException {

		ArrayList errFields = new ArrayList(); // errFields record those null
											   // fields that cannot be null.
		// 请你将下面的字段名改为界面显示名：
		// Non Pk fields that cannot be null:
		if (m_dbilldate == null) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0002313")/*@res "日期"*/);
		} else if (m_dbilldate.equals("")) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0002313")/*@res "日期"*/);
		}

		//if (m_cfreecustid == null) {
		//errFields.add(new String("散户"));
		//}
		//if (m_ccalbodyid == null) {
		//errFields.add(new String("库存组织"));
		//}
		if (m_csalecorpid == null) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0004128")/*@res "销售组织"*/);
		}
		if (m_cbiztype == null) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC001-0000003")/*@res "业务类型"*/);
		}
		//if (m_vreceiptcode == null) {
		//errFields.add(new String("单据号"));
		//}else
		//if (m_vreceiptcode.equals("")) {
		//errFields.add(new String("单据号"));
		//}
		if (m_creceipttype == null) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0000807")/*@res "单据类型"*/);
		}
		if (m_fstatus == null) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0002916")/*@res "状态"*/);
		}
		if (m_cdeptid == null) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0004064")/*@res "部门"*/);
		} else if (m_cdeptid.equals("")) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0004064")/*@res "部门"*/);
		}
		if (m_ccustomerid == null) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0001589")/*@res "客户"*/);
		} else if (m_ccustomerid.equals("")) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0001589")/*@res "客户"*/);
		}

		if (m_creceiptcorpid == null || m_creceiptcorpid.equals("")) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0001899")/*@res "开票单位"*/);
		}
		//if (m_creceiptcustomerid == null || m_creceiptcustomerid.equals(""))
		// {
		//errFields.add(new String("收货单位"));
		//}
		//if (m_nevaluatecarriage == null) {
		//errFields.add(new String("预估运费"));
		//}
		//if (m_ctermprotocolid == null || m_ctermprotocolid.equals("")) {
		//errFields.add(new String("收款协议"));
		//}
		if (m_ndiscountrate == null) {
			errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0002290")/*@res "整单折扣"*/);
		}
		if (m_bfreecustflag != null && m_bfreecustflag.booleanValue()) {
			if (m_cfreecustid == null)
				errFields.add(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("common","UC000-0002272")/*@res "散户"*/);

		}

		// construct the exception message:
		StringBuffer message = new StringBuffer();
		message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("40060301","UPP40060301-000083"));
		//message.append("下列字段不能为空：");
		if (errFields.size() > 0) {
			Object[] temp = errFields.toArray();
			message.append("[");
			message.append(temp[0].toString());
			for (int i = 1; i < temp.length; i++) {
				message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("SCMCOMMON","UPPSCMCommon-000000"));
				//message.append("、");
				message.append(temp[i].toString());
			}
			message.append("]");
			// throw the exception:
			throw new NullFieldException(message.toString());
		}
	}

	/**
	 * <p>
	 * 需要在一个循环中访问的属性的名称数组。
	 * <p>
	 * 创建日期：(??Date??)
	 * 
	 * @return java.lang.String[]
	 */
	public java.lang.String[] getAttributeNames() {
		return attributeNames;
	}

	/**
	 * 此处插入方法说明。 创建日期：(01-3-20 17:24:29)
	 * 
	 * @param key
	 *            java.lang.String
	 */
	public Object getAttributeValue(String attributeName) {
		java.util.HashMap hs = getArrHs();
		if (hs == null || attributeName == null)
			return null;
		Integer index = null;
		index = (Integer) hs.get(attributeName);
		if (index == null)
			return null;
		return getAttributeValue(index.intValue());

	}

	/**
	 * 此处插入方法说明。 创建日期：(01-3-20 17:24:29)
	 * 
	 * @param key
	 *            java.lang.String
	 */
	public void setAttributeValue(String name, Object value) {
		java.util.HashMap hs = getArrHs();
		if (hs == null || name == null)
			return;
		Integer index = null;
		index = (Integer) hs.get(name);
		if (index == null)
			return;
		setAttributeValue(index.intValue(), value);
	}

	/**
	 * 获取需数据库持久化的字段定义。 创建日期：(2004-2-18 11:29:56)
	 * 
	 * @return nc.vo.so.so001.SOField[]
	 */
	public static SOField[] getAddFields() {
		if (addFields == null) {
			SOField[] sofields = new SOField[38];

			SOField sofield = new SOField();
			sofield.setVoname("btransendflag");
			sofield.setUftype(SODataDesc.UFBOOLEAN);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("btransendflag");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[0] = sofield;

			sofield = new SOField();
			sofield.setVoname("naccountperiod");
			sofield.setUftype(SODataDesc.UFDOUBLE);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("naccountperiod");
			sofield.setDatabasetype(java.sql.Types.DECIMAL);
			sofields[1] = sofield;

			sofield = new SOField();
			sofield.setVoname("boverdate");
			sofield.setUftype(SODataDesc.UFBOOLEAN);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("boverdate");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[2] = sofield;

			sofield = new SOField();
			sofield.setVoname("iprintcount");
			sofield.setUftype(SODataDesc.INTEGER);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("iprintcount");
			sofield.setDatabasetype(java.sql.Types.INTEGER);
			sofields[3] = sofield;

			sofield = new SOField();
			sofield.setVoname("bdeliver");
			sofield.setUftype(SODataDesc.UFBOOLEAN);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("bdeliver");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[4] = sofield;
			
			//////////////////////////////////////////////
			
			sofield = new SOField();
			sofield.setVoname("vdef11");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef11");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[5] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("vdef12");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef12");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[6] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("vdef13");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef13");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[7] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("vdef14");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef14");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[8] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("vdef15");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef15");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[9] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("vdef16");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef16");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[10] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("vdef17");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef17");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[11] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("vdef18");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef18");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[12] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("vdef19");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef19");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[13] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("vdef20");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("vdef20");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[14] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc1");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc1");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[15] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc2");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc2");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[16] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc3");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc3");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[17] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc4");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc4");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[18] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc5");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc5");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[19] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc6");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc6");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[20] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc7");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc7");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[21] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc8");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc8");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[22] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc9");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc9");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[23] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc10");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc10");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[24] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc11");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc11");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[25] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc12");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc12");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[26] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc13");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc13");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[27] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc14");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc14");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[28] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc15");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc15");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[29] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc16");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc16");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[30] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc17");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc17");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[31] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc18");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc18");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[32] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc19");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc19");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[33] = sofield;
			
			sofield = new SOField();
			sofield.setVoname("pk_defdoc20");
			sofield.setUftype(SODataDesc.STRING);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("pk_defdoc20");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[34] = sofield;

			sofield = new SOField();
			sofield.setVoname("dbilltime");
			sofield.setUftype(SODataDesc.UFDATETIME);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("dbilltime");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[35] = sofield;

			sofield = new SOField();
			sofield.setVoname("daudittime");
			sofield.setUftype(SODataDesc.UFDATETIME);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("daudittime");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[36] = sofield;

			sofield = new SOField();
			sofield.setVoname("dmoditime");
			sofield.setUftype(SODataDesc.UFDATETIME);
			sofield.setTablename("so_sale");
			sofield.setDatabasename("dmoditime");
			sofield.setDatabasetype(java.sql.Types.CHAR);
			sofields[37] = sofield;


			addFields = sofields;

		}
		return addFields;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-3-1 13:06:14)
	 * 
	 * @return java.util.HashMap
	 */
	public java.util.HashMap getArrHs() {

		if (arrhs == null) {
			String[] names = getAttributeNames();
			if (names == null || names.length <= 0)
				return arrhs;
			arrhs = new java.util.HashMap(300);
			for (int i = 0, loop = names.length; i < loop; i++) {
				arrhs.put(names[i], new Integer(i));
			}
			
			// 非常规业务数据字段从1000后取值
			arrhs.put("errMsg", 1001);
		}
		return arrhs;
	}

	/**
	 * <p>
	 * 创建日期：(2001-5-11)
	 * 
	 * @param key
	 *            java.lang.String
	 */
	public Object getAttributeValue(int index) {
		if (index < 0)
			return null;
		if (index < 10) {
			if (index == 0) { // csaleid
				return m_csaleid;
			} else if (index == 1) { //ccalbodyid
				return m_ccalbodyid;
			}
			//
			else if (index == 2) { // pk_corp
				return m_pk_corp;
			} else if (index == 3) { // vreceiptcode
				return m_vreceiptcode;
			} else if (index == 4) { // creceipttype
				return m_creceipttype;
			} else if (index == 5) { // cbiztype
				return m_cbiztype;
			} else if (index == 6) { // finvoiceclass
				return m_finvoiceclass;
			} else if (index == 7) { // finvoicetype
				return m_finvoicetype;
			} else if (index == 8) { // vaccountyear
				return m_vaccountyear;
			} else if (index == 9) { //{ // binitflag
				return m_binitflag;
			} else {
				return null;
			}
		} else if (index < 20) {
			if (index == 10) { // dbilldate
				return m_dbilldate;
			} else if (index == 11) { // ccustomerid
				return m_ccustomerid;
			} else if (index == 12) { // cdeptid
				return m_cdeptid;
			} else if (index == 13) { // cemployeeid
				return m_cemployeeid;
			} else if (index == 14) { // coperatorid
				return m_coperatorid;
			} else if (index == 15) { // ctermprotocolid
				return m_ctermprotocolid;
			} else if (index == 16) { // csalecorpid
				return m_csalecorpid;
			} else if (index == 17) { // creceiptcustomerid
				return m_creceiptcustomerid;
			} else if (index == 18) { // vreceiveaddress
				return m_vreceiveaddress;
			} else if (index == 19) { // creceiptcorpid
				return m_creceiptcorpid;
			} else {
				return null;
			}
		} else if (index < 30) {
			if (index == 20) { // ctransmodeid
				return m_ctransmodeid;
			} else if (index == 21) { // ndiscountrate
				return m_ndiscountrate;
			} else if (index == 22) { // cwarehouseid
				return m_cwarehouseid;
			} else if (index == 23) { // veditreason
				return m_veditreason;
			} else if (index == 24) { // bfreecustflag
				return m_bfreecustflag;
			} else if (index == 25) { // cfreecustid
				return m_cfreecustid;
			} else if (index == 26) { // ibalanceflag
				return m_ibalanceflag;
			} else if (index == 27) { // nsubscription
				return m_nsubscription;
			} else if (index == 28) { // ccreditnum
				return m_ccreditnum;
			} else if (index == 29) { // nevaluatecarriage
				return m_nevaluatecarriage;
			} else {
				return null;
			}
		} else if (index < 40) {
			if (index == 30) { // dmakedate
				return m_dmakedate;
			} else if (index == 31) { // capproveid
				return m_capproveid;
			} else if (index == 32) { // dapprovedate
				return m_dapprovedate;
			} else if (index == 33) { // bretinvflag
				return m_bretinvflag;
			} else if (index == 34) { // boutendflag
				return m_boutendflag;
			} else if (index == 35) { // binvoicendflag
				return m_binvoicendflag;
			} else if (index == 36) { // breceiptendflag
				return m_breceiptendflag;
			} else if (index == 37) { // fstatus
				return m_fstatus;
			} else if (index == 38) { // vnote
				return m_vnote;
			} else if (index == 39) { // vdef1
				return m_vdef1;
			} else {
				return null;
			}
		} else if (index < 50) {
			if (index == 40) { // vdef2
				return m_vdef2;
			} else if (index == 41) { // vdef3
				return m_vdef3;
			} else if (index == 42) { // vdef4
				return m_vdef4;
			} else if (index == 43) { // vdef5
				return m_vdef5;
			} else if (index == 44) { // vdef6
				return m_vdef6;
			} else if (index == 45) { // vdef7
				return m_vdef7;
			} else if (index == 46) { // vdef8
				return m_vdef8;
			} else if (index == 47) { // vdef9
				return m_vdef9;
			} else if (index == 48) { // vdef10
				return m_vdef10;
			} else if (index == 49) { // ts
				return m_ts;
			} else {
				return null;
			}

		} else if (index < 60) {

			//
			if (index == 50) { //time
				return m_time;
			} else if (index == 51) { //billtype
				return m_creceipttype;
			} else if (index == 52) { //billid
				return m_csaleid;
			} else if (index == 53) { //pkcorp
				return m_pk_corp;
			} else if (index == 54) { //nc.vo.scm.recordtime.TimeAttributeName.OPERATORID,
				return m_coperatorid;
			} else if (index == 55) { //nc.vo.scm.recordtime.TimeAttributeName.FIRSTBILLID,
				return null;
			} else if (index == 56) { // bcodechanged
				return new UFBoolean(m_bcodechanged);
			} else if (index == 57) { // voldreceiptcode
				return m_voldreceiptcode;
			}
			//yt add 2003-10-16
			else if (index == 58) { // npreceiverate
				return m_npreceiverate;
			} else if (index == 59) { // npreceivemny
				return m_npreceivemny;
			} else {
				return null;
			}

		} else if (index < 70) {

			//yb add
			if (index == 60) { // ccalbodyname
				return ccalbodyname;
			} else if (index == 61) { // ccurrencytypeid
				return m_ccurrencytypeid;
			} else if (index == 62) { // nexchangeotoarate
				return nexchangeotoarate;
			} else if (index == 63) { // nexchangeotobrate
				return m_nexchangeotobrate;
			} else if (index == 64) { // ccustomername
				return ccustomername;
			} else if (index == 65) { // cdeptname
				return cdeptname;
			} else if (index == 66) { // cemployeename
				return cemployeename;
			} else if (index == 67) { // cfreecustname
				return cfreecustname;
			} else if (index == 68) { // creceiptcorpname
				return creceiptcorpname;
			} else if (index == 69) { // creceiptcustomername
				return creceiptcustomername;
			} else {
				return null;
			}
		} else if (index < 80) {

			if (index == 70) { // csalecorpname
				return csalecorpname;
			} else if (index == 71) { // ctermprotocolname
				return ctermprotocolname;
			} else if (index == 72) { // ctransmodename
				return ctransmodename;
			} else if (index == 73) { // cwarehousename
				return cwarehousename;
			} else if (index == 74) { // ntaxrate
				return ntaxrate;
			} else if (index == 75) { // capprovename
				return capprovename;
			} else if (index == 76) { // coperatorname
				return coperatorname;
			}
			//nc30 add
			else if (index == 77) { // nreceiptcathmny
				return nreceiptcathmny;
			} else if (index == 78) { // btransendflag
				return btransendflag;
			} else if (index == 79) { // naccountperiod
				return naccountperiod;
			} else {
				return null;
			}
			
		} else if (index < 90) {
			
			if (index == 80) { //boverdate
				return boverdate;
			} else if (index == 81) { //salecorp
				return salecorp;
			} else if (index == 82) { //bpayendflag
				return m_bpayendflag;
			} else if (index == 83) { //cbiztypename
				return cbiztypename;
			} else if (index == 84) { //iprintcount
				return iprintcount;
			} else if (index == 85) { //bdeliver
				return bdeliver;
			} else if (index == 86) { //vdef11
				return vdef11;
			} else if (index == 87) { //vdef12
				return vdef12;
			} else if (index == 88) { //vdef13
				return vdef13;
			} else if (index == 89) { //vdef14
				return vdef14;
			}else {
				return null;
			}
			
		}else if (index < 100) {

			if (index == 90) { // vdef15
				return vdef15;
			} else if (index == 91) { // vdef16
				return vdef16;
			} else if (index == 92) { // vdef17
				return vdef17;
			} else if (index == 93) { // vdef18
				return vdef18;
			} else if (index == 94) { // vdef19
				return vdef19;
			} else if (index == 95) { // vdef20
				return vdef20;
			} else if (index == 96) { // pk_defdoc1
				return pk_defdoc1;
			}else if (index == 97) { // pk_defdoc2
				return pk_defdoc2;
			} else if (index == 98) { // pk_defdoc3
				return pk_defdoc3;
			} else if (index == 99) { // pk_defdoc4
				return pk_defdoc4;
			} else {
				return null;
			}
			
		}else if (index < 110) {

			if (index == 100) { // pk_defdoc5
				return pk_defdoc5;
			} else if (index == 101) { // pk_defdoc6
				return pk_defdoc6;
			} else if (index == 102) { // pk_defdoc7
				return pk_defdoc7;
			} else if (index == 103) { // pk_defdoc8
				return pk_defdoc8;
			} else if (index == 104) { // pk_defdoc9
				return pk_defdoc9;
			} else if (index == 105) { // pk_defdoc10
				return pk_defdoc10;
			} else if (index == 106) { // pk_defdoc11
				return pk_defdoc11;
			}else if (index == 107) { // pk_defdoc12
				return pk_defdoc12;
			} else if (index == 108) { // pk_defdoc13
				return pk_defdoc13;
			} else if (index == 109) { // pk_defdoc14
				return pk_defdoc14;
			} else {
				return null;
			}
		}else if (index <= 120) {

			if (index == 110) { // pk_defdoc15
				return pk_defdoc15;
			} else if (index == 111) { // pk_defdoc16
				return pk_defdoc16;
			} else if (index == 112) { // pk_defdoc17
				return pk_defdoc17;
			} else if (index == 113) { // pk_defdoc18
				return pk_defdoc18;
			} else if (index == 114) { // pk_defdoc19
				return pk_defdoc19;
			} else if (index == 115) { // pk_defdoc20
				return pk_defdoc20;
			} else if (index == 116) { // pk_defdoc20
				return m_timenew ;
			} else if (index == 117) { // pk_defdoc20
				return m_timeaudit ;
			} else if (index == 118) { // pk_defdoc20
				return m_dbilltime;
			} else if (index == 119) { // pk_defdoc20
				return m_daudittime ;
			} else if (index == 120) { // pk_defdoc20
				return m_dmoditime ;
			} else {
				return null;
			}
		}else if(index<=130){
			if(index==121){
				return m_nheadsummny;
			}
		}
		return null;
	}

	/**
	 * 属性m_bfreecustflag的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFBoolean
	 */
	public boolean getBcodechanged() {
		return m_bcodechanged;
	}

	/**
	 * 属性m_binvoicendflag的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getBinvoicendflag() {
		return m_binvoicendflag;
	}

	/**
	 * 属性m_boutendflag的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getBoutendflag() {
		return m_boutendflag;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-3-19 10:32:06)
	 * 
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getBoverdate() {
		return boverdate;
	}

	/**
	 * 属性m_breceiptendflag的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getBreceiptendflag() {
		return m_breceiptendflag;
	}

	/**
	 * 属性m_bretinvflag的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getBretinvflag() {
		return m_bretinvflag;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-2-18 14:18:25)
	 * 
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getBtransendflag() {
		return btransendflag;
	}

	/**
	 * 返回对象标识，用来唯一定位对象。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getCcalbodyid() {

		return m_ccalbodyid;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-2-18 14:18:25)
	 * 
	 * @return nc.vo.pub.lang.UFDouble
	 */
	public nc.vo.pub.lang.UFDouble getNaccountperiod() {
		return naccountperiod;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2003-10-16 13:11:53)
	 * 
	 * @return nc.vo.pub.lang.UFDouble
	 */
	public UFDouble getNpreceivemny() {
		return m_npreceivemny;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2003-10-16 13:11:14)
	 * 
	 * @return nc.vo.pub.lang.UFDouble
	 */
	public UFDouble getNpreceiverate() {
		return m_npreceiverate;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-2-18 14:18:25)
	 * 
	 * @return nc.vo.pub.lang.UFDouble
	 */
	public nc.vo.pub.lang.UFDouble getNreceiptcathmny() {
		return nreceiptcathmny;
	}

	/**
	 * 属性m_ts的Getter方法。
	 * 
	 * 创建日期：(2002-4-16)
	 * 
	 * @return UFDateTime
	 */
	public UFDateTime getTime() {
		return m_time;
	}

	/**
	 * 属性m_ts的Getter方法。
	 * 
	 * 创建日期：(2002-4-16)
	 * 
	 * @return UFDateTime
	 */
	public UFDateTime getTs() {
		return m_ts;
	}

	/**
	 * 属性m_vreceiptcode的Getter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @return String
	 */
	public String getVoldreceiptcode() {
		return m_voldreceiptcode;
	}

	/**
	 * <p>
	 * 创建日期：(2001-5-11)
	 * 
	 * @param key
	 *            java.lang.String
	 */
	public void setAttributeValue(int index, Object value) {
		if (index < 0)
			return;
		try {
			if (index < 10) {
				if (index == 0) { // csaleid
					m_csaleid = (String) value;
				} else if (index == 1) { //ccalbodyid
					m_ccalbodyid = (String) value;
				}
				//
				else if (index == 2) { // pk_corp
					m_pk_corp = (String) value;
				} else if (index == 3) { // vreceiptcode
					m_vreceiptcode = (String) value;
				} else if (index == 4) { // creceipttype
					m_creceipttype = (String) value;
				} else if (index == 5) { // cbiztype
					m_cbiztype = (String) value;
				} else if (index == 6) { // finvoiceclass
					m_finvoiceclass = (Integer) value;
				} else if (index == 7) { // finvoicetype
					m_finvoicetype = (Integer) value;
				} else if (index == 8) { // vaccountyear
					m_vaccountyear = (String) value;
				} else if (index == 9) { //{ // binitflag
					m_binitflag = (UFBoolean) value;
				} else {
					return;
				}
			} else if (index < 20) {
				if (index == 10) { // dbilldate
					m_dbilldate = (UFDate) value;
				} else if (index == 11) { // ccustomerid
					m_ccustomerid = (String) value;
				} else if (index == 12) { // cdeptid
					m_cdeptid = (String) value;
				} else if (index == 13) { // cemployeeid
					m_cemployeeid = (String) value;
				} else if (index == 14) { // coperatorid
					m_coperatorid = (String) value;
				} else if (index == 15) { // ctermprotocolid
					m_ctermprotocolid = (String) value;
				} else if (index == 16) { // csalecorpid
					m_csalecorpid = (String) value;
				} else if (index == 17) { // creceiptcustomerid
					m_creceiptcustomerid = (String) value;
				} else if (index == 18) { // vreceiveaddress
					m_vreceiveaddress = (String) value;
				} else if (index == 19) { // creceiptcorpid
					m_creceiptcorpid = (String) value;
				} else {
					return;
				}
			} else if (index < 30) {
				if (index == 20) { // ctransmodeid
					m_ctransmodeid = (String) value;
				} else if (index == 21) { // ndiscountrate
					m_ndiscountrate = (UFDouble) value;
				} else if (index == 22) { // cwarehouseid
					m_cwarehouseid = (String) value;
				} else if (index == 23) { // veditreason
					m_veditreason = (String) value;
				} else if (index == 24) { // bfreecustflag
					m_bfreecustflag = (UFBoolean) value;
				} else if (index == 25) { // cfreecustid
					m_cfreecustid = (String) value;
				} else if (index == 26) { // ibalanceflag
					m_ibalanceflag = (Integer) value;
				} else if (index == 27) { // nsubscription
					m_nsubscription = (UFDouble) value;
				} else if (index == 28) { // ccreditnum
					m_ccreditnum = (String) value;
				} else if (index == 29) { // nevaluatecarriage
					m_nevaluatecarriage = (UFDouble) value;
				} else {
					return;
				}
			} else if (index < 40) {
				if (index == 30) { // dmakedate
					m_dmakedate = (UFDate) value;
				} else if (index == 31) { // capproveid
					m_capproveid = (String) value;
				} else if (index == 32) { // dapprovedate
					m_dapprovedate = (UFDate) value;
				} else if (index == 33) { // bretinvflag
					m_bretinvflag = (UFBoolean) value;
				} else if (index == 34) { // boutendflag
					m_boutendflag = (UFBoolean) value;
				} else if (index == 35) { // binvoicendflag
					m_binvoicendflag = (UFBoolean) value;
				} else if (index == 36) { // breceiptendflag
					m_breceiptendflag = (UFBoolean) value;
				} else if (index == 37) { // fstatus
					m_fstatus = (Integer) value;
				} else if (index == 38) { // vnote
					m_vnote = (String) value;
				} else if (index == 39) { // vdef1
					m_vdef1 = (String) value;
				} else {
					return;
				}
			} else if (index < 50) {
				if (index == 40) { // vdef2
					m_vdef2 = (String) value;
				} else if (index == 41) { // vdef3
					m_vdef3 = (String) value;
				} else if (index == 42) { // vdef4
					m_vdef4 = (String) value;
				} else if (index == 43) { // vdef5
					m_vdef5 = (String) value;
				} else if (index == 44) { // vdef6
					m_vdef6 = (String) value;
				} else if (index == 45) { // vdef7
					m_vdef7 = (String) value;
				} else if (index == 46) { // vdef8
					m_vdef8 = (String) value;
				} else if (index == 47) { // vdef9
					m_vdef9 = (String) value;
				} else if (index == 48) { // vdef10
					m_vdef10 = (String) value;
				} else if (index == 49) { // ts
					m_ts = (value == null ? null : new UFDateTime(value
							.toString()));
				} else {
					return;
				}

			} else if (index < 60) {

				//
				if (index == 50) { //time
					m_time = (value == null ? null : new UFDateTime(value
							.toString()));
				} else if (index == 51) { //billtype
					return;
				} else if (index == 52) { //billid
					return;
				} else if (index == 53) { //pkcorp
					return;
				} else if (index == 54) { //nc.vo.scm.recordtime.TimeAttributeName.OPERATORID,
					return;
				} else if (index == 55) { //nc.vo.scm.recordtime.TimeAttributeName.FIRSTBILLID,
					return;
				} else if (index == 56) { // bcodechanged
					m_bcodechanged = value == null ? false
							: ((UFBoolean) value).booleanValue();
				} else if (index == 57) { // voldreceiptcode
					m_voldreceiptcode = (String) value;
				}
				//yt add 2003-10-16
				else if (index == 58) { // npreceiverate
					m_npreceiverate = (UFDouble) value;
				} else if (index == 59) { // npreceivemny
					m_npreceivemny = (UFDouble) value;
				} else {
					return;
				}

			} else if (index < 70) {

				//yb add
				if (index == 60) { // ccalbodyname
					ccalbodyname = (String) value;
				} else if (index == 61) { // ccurrencytypeid
					m_ccurrencytypeid = (String) value;
				} else if (index == 62) { // nexchangeotoarate
					nexchangeotoarate = (UFDouble) value;
				} else if (index == 63) { // nexchangeotobrate
					m_nexchangeotobrate = (UFDouble) value;
				} else if (index == 64) { // ccustomername
					ccustomername = (String) value;
				} else if (index == 65) { // cdeptname
					cdeptname = (String) value;
				} else if (index == 66) { // cemployeename
					cemployeename = (String) value;
				} else if (index == 67) { // cfreecustname
					cfreecustname = (String) value;
				} else if (index == 68) { // creceiptcorpname
					creceiptcorpname = (String) value;
				} else if (index == 69) { // creceiptcustomername
					creceiptcustomername = (String) value;
				} else {
					return;
				}
			} else if (index < 80) {

				if (index == 70) { // csalecorpname
					csalecorpname = (String) value;
				} else if (index == 71) { // ctermprotocolname
					ctermprotocolname = (String) value;
				} else if (index == 72) { // ctransmodename
					ctransmodename = (String) value;
				} else if (index == 73) { // cwarehousename
					cwarehousename = (String) value;
				} else if (index == 74) { // ntaxrate
					ntaxrate = (UFDouble) value;
				} else if (index == 75) { // capprovename
					capprovename = (String) value;
				} else if (index == 76) { // coperatorname
					coperatorname = (String) value;
				}
				//nc30 add
				else if (index == 77) { // nreceiptcathmny
					nreceiptcathmny = (UFDouble) value;
				} else if (index == 78) { // btransendflag
					btransendflag = (UFBoolean) value;
				} else if (index == 79) { // naccountperiod
					naccountperiod = (UFDouble) value;
				} else {
					return;
				}
				
			} else if (index < 90) {
				
				if (index == 80) { // boverdate
					boverdate = (UFBoolean) value;
				} else if (index == 81) { // salecorp
					salecorp = (String) value;
				} else if (index == 82) { // bpayendflag
					m_bpayendflag = (UFBoolean) value;
				} else if (index == 83) { // cbiztypename
					cbiztypename = (String) value;
				} else if (index == 84) { // iprintcount
					iprintcount = (Integer) value;
				} else if (index == 85) { // bdeliver
					bdeliver = (UFBoolean) value;
				} else if (index == 86) { // vdef11
					vdef11 = (String) value;
				} else if (index == 87) { // vdef12
					vdef12 = (String) value;
				} else if (index == 88) { // vdef13
					vdef13 = (String) value;
				} else if (index == 89) { // vdef14
					vdef14 = (String) value;
				} else {
					return;
				}
			}else if (index < 100) {
				
				if (index == 90) { // vdef15
					vdef15 = (String) value;
				} else if (index == 91) { // vdef16
					vdef16 = (String) value;
				} else if (index == 92) { // vdef17
					vdef17 = (String) value;
				} else if (index == 93) { // vdef18
					vdef18 = PuPubVO.getString_TrimZeroLenAsNull(value);//zhf modify
				} else if (index == 94) { // vdef19
					vdef19 = (String) value;
				} else if (index == 95) { // vdef20
					vdef20 = (String) value;
				} else if (index == 96) { // pk_defdoc1
					pk_defdoc1 = (String) value;
				} else if (index == 97) { // pk_defdoc2
					pk_defdoc2 = (String) value;
				} else if (index == 98) { // pk_defdoc3
					pk_defdoc3 = (String) value;
				} else if (index == 99) { // pk_defdoc4
					pk_defdoc4 = (String) value;
				} else {
					return;
				}
			}else if (index < 110) {
				
				if (index == 100) { // pk_defdoc5
					pk_defdoc5 = (String) value;
				} else if (index == 101) { // pk_defdoc6
					pk_defdoc6 = (String) value;
				} else if (index == 102) { // pk_defdoc7
					pk_defdoc7 = (String) value;
				} else if (index == 103) { // pk_defdoc8
					pk_defdoc8 = (String) value;
				} else if (index == 104) { // pk_defdoc9
					pk_defdoc9 = (String) value;
				} else if (index == 105) { // pk_defdoc10
					pk_defdoc10 = (String) value;
				} else if (index == 106) { // pk_defdoc11
					pk_defdoc11 = (String) value;
				} else if (index == 107) { // pk_defdoc12
					pk_defdoc12 = (String) value;
				} else if (index == 108) { // pk_defdoc13
					pk_defdoc13 = (String) value;
				} else if (index == 109) { // pk_defdoc14
					pk_defdoc14 = (String) value;
				} else {
					return;
				}
			}else if (index <= 120) {
				
				if (index == 110) { // pk_defdoc15
					pk_defdoc15 = (String) value;
				} else if (index == 111) { // pk_defdoc16
					pk_defdoc16 = (String) value;
				} else if (index == 112) { // pk_defdoc17
					pk_defdoc17 = (String) value;
				} else if (index == 113) { // pk_defdoc18
					pk_defdoc18 = (String) value;
				} else if (index == 114) { // pk_defdoc19
					pk_defdoc19 = (String) value;
				} else if (index == 115) { // pk_defdoc20
					pk_defdoc20 = (String) value;
				} else if (index == 116) { // pk_defdoc20
					m_timenew = (UFDateTime) value;
				} else if (index == 117) { // pk_defdoc20
					m_timeaudit = (UFDateTime) value;
				} else if (index == 118) { // pk_defdoc20
					m_dbilltime = (value == null ? null : new UFDateTime(value
							.toString()));
				} else if (index == 119) { // pk_defdoc20
					m_daudittime = (value == null ? null : new UFDateTime(value
							.toString()));
				} else if (index == 120) { // pk_defdoc20
					m_dmoditime = (value == null ? null : new UFDateTime(value
							.toString()));
				} else {
					return;
				}
				
			}else if(index<=130){
				if(index==121){
					m_nheadsummny=(UFDouble)value;
				}
			} else if (index > 1000) {
				if (index == 1001) {
					errMsg = (String) value;
				}
			}
			
		} catch (ClassCastException e) {
			throw new ClassCastException(
			   		nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("40060301","UPP40060301-000096",null,new String[]{index+"",value+""})
			   		);
			//throw new ClassCastException(" setAttributeValue方法中为 " + index
			//		+ " 赋值时类型转换错误！（值：" + value + "）");
		}
	}

	/**
	 * 属性m_binitflag的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_binitflag
	 *            UFBoolean
	 */
	public void setBcodechanged(boolean newBinitflag) {
		m_bcodechanged = newBinitflag;
	}

	/**
	 * 属性m_binvoicendflag的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_binvoicendflag
	 *            UFBoolean
	 */
	public void setBinvoicendflag(UFBoolean newbinvoicendflag) {

		m_binvoicendflag = newbinvoicendflag;
	}

	/**
	 * 属性m_boutendflag的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_boutendflag
	 *            UFBoolean
	 */
	public void setBoutendflag(UFBoolean newboutendflag) {

		m_boutendflag = newboutendflag;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-3-19 10:32:06)
	 * 
	 * @param newBoverdate
	 *            nc.vo.pub.lang.UFBoolean
	 */
	public void setBoverdate(nc.vo.pub.lang.UFBoolean newBoverdate) {
		boverdate = newBoverdate;
	}

	/**
	 * 属性m_breceiptendflag的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_breceiptendflag
	 *            UFBoolean
	 */
	public void setBreceiptendflag(UFBoolean newbreceiptendflag) {

		m_breceiptendflag = newbreceiptendflag;
	}

	/**
	 * 属性m_bretinvflag的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_bretinvflag
	 *            UFBoolean
	 */
	public void setBretinvflag(UFBoolean newBretinvflag) {

		m_bretinvflag = newBretinvflag;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-2-18 14:18:25)
	 * 
	 * @param newBtransendflag
	 *            nc.vo.pub.lang.UFBoolean
	 */
	public void setBtransendflag(nc.vo.pub.lang.UFBoolean newBtransendflag) {
		btransendflag = newBtransendflag;
	}

	/**
	 * 属性m_ccalbodyid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_ccustomerid
	 *            String
	 */
	public void setCcalbodyid(String newCcalbodyid) {

		m_ccalbodyid = newCcalbodyid;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-2-18 14:18:25)
	 * 
	 * @param newNaccountperiod
	 *            nc.vo.pub.lang.UFDouble
	 */
	public void setNaccountperiod(nc.vo.pub.lang.UFDouble newNaccountperiod) {
		naccountperiod = newNaccountperiod;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2003-10-16 13:18:15)
	 * 
	 * @param newNpreceivemny
	 *            nc.vo.pub.lang.UFDouble
	 */
	public void setNpreceivemny(UFDouble newNpreceivemny) {
		m_npreceivemny = newNpreceivemny;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2003-10-16 13:17:19)
	 * 
	 * @param newNpreceiverate
	 *            nc.vo.pub.lang.UFDouble
	 */
	public void setNpreceiverate(UFDouble newNpreceiverate) {
		m_npreceiverate = newNpreceiverate;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-2-18 14:18:25)
	 * 
	 * @param newNreceiptcathmny
	 *            nc.vo.pub.lang.UFDouble
	 */
	public void setNreceiptcathmny(nc.vo.pub.lang.UFDouble newNreceiptcathmny) {
		nreceiptcathmny = newNreceiptcathmny;
	}

	/**
	 * 属性m_ccalbodyid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_ccalbodyid
	 *            String
	 */
	public void setTime(UFDateTime newTs) {
		m_time = newTs;
	}

	/**
	 * 属性m_ccalbodyid的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_ccalbodyid
	 *            String
	 */
	public void setTs(UFDateTime newTs) {

		m_ts = newTs;
	}

	/**
	 * 属性m_vreceiptcode的setter方法。
	 * 
	 * 创建日期：(2001-5-11)
	 * 
	 * @param newM_vreceiptcode
	 *            String
	 */
	public void setVoldreceiptcode(String newVreceiptcode) {

		m_voldreceiptcode = newVreceiptcode;
	}

	/**
	 * ?user> 功能： 参数： 返回： 例外： 日期：(2004-11-10 10:19:21) 修改日期，修改人，修改原因，注释标志：
	 * 
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getBdeliver() {
		return bdeliver;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-4-24 13:27:40)
	 * 
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getBpayendflag() {
		return m_bpayendflag;
	}

	/**
	 * ?user> 功能： 参数： 返回： 例外： 日期：(2004-7-5 15:32:56) 修改日期，修改人，修改原因，注释标志：
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getCcurrencytypeid() {
		return m_ccurrencytypeid;
	}

	/**
	 * ?user> 功能： 参数： 返回： 例外： 日期：(2004-11-9 16:09:51) 修改日期，修改人，修改原因，注释标志：
	 * 
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getIprintcount() {
		return iprintcount;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-3-30 10:39:04)
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getSalecorp() {
		return salecorp;
	}

	/**
	 * ?user> 功能： 参数： 返回： 例外： 日期：(2004-11-10 10:19:21) 修改日期，修改人，修改原因，注释标志：
	 * 
	 * @param newBdeliver
	 *            nc.vo.pub.lang.UFBoolean
	 */
	public void setBdeliver(nc.vo.pub.lang.UFBoolean newBdeliver) {
		bdeliver = newBdeliver;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-4-24 13:27:40)
	 * 
	 * @param newM_bpayendflag
	 *            nc.vo.pub.lang.UFBoolean
	 */
	public void setBpayendflag(nc.vo.pub.lang.UFBoolean newM_bpayendflag) {
		m_bpayendflag = newM_bpayendflag;
	}

	/**
	 * ?user> 功能： 参数： 返回： 例外： 日期：(2004-7-5 15:32:56) 修改日期，修改人，修改原因，注释标志：
	 * 
	 * @param newCcurrencytypeid
	 *            java.lang.String
	 */
	public void setCcurrencytypeid(java.lang.String newCcurrencytypeid) {
		m_ccurrencytypeid = newCcurrencytypeid;
	}

	/**
	 * ?user> 功能： 参数： 返回： 例外： 日期：(2004-11-9 16:09:51) 修改日期，修改人，修改原因，注释标志：
	 * 
	 * @param newIprintcount
	 *            java.lang.Integer
	 */
	public void setIprintcount(java.lang.Integer newIprintcount) {
		iprintcount = newIprintcount;
	}

	/**
	 * 此处插入方法说明。 创建日期：(2004-3-30 10:39:04)
	 * 
	 * @param newSalecorp
	 *            java.lang.String
	 */
	public void setSalecorp(java.lang.String newSalecorp) {
		salecorp = newSalecorp;
	}
	
	/**
	 * 获取打印信息。 创建日期：(2004-3-30 10:39:04)
	 * 
	 * @param newSalecorp
	 *            java.lang.String
	 */
	public ScmPrintlogVO getScmPrintlogVO() {
		ScmPrintlogVO printlogvo = new ScmPrintlogVO();
		printlogvo.setCbillid(getCsaleid());
		printlogvo.setVbillcode(getVreceiptcode());
		printlogvo.setCbilltypecode("30");
		printlogvo.setCoperatorid(getCoperatorid());
		printlogvo.setIoperatetype(new Integer(PrintConst.PAT_OK));
		printlogvo.setPk_corp(getPk_corp());
		printlogvo.setTs(getTs() == null ? "" : getTs().toString());
		return printlogvo;
	}

	/**
	 * @return 返回 pk_defdoc1。
	 */
	public String getPk_defdoc1() {
		return pk_defdoc1;
	}
	/**
	 * @param pk_defdoc1 要设置的 pk_defdoc1。
	 */
	public void setPk_defdoc1(String pk_defdoc1) {
		this.pk_defdoc1 = pk_defdoc1;
	}
	/**
	 * @return 返回 pk_defdoc10。
	 */
	public String getPk_defdoc10() {
		return pk_defdoc10;
	}
	/**
	 * @param pk_defdoc10 要设置的 pk_defdoc10。
	 */
	public void setPk_defdoc10(String pk_defdoc10) {
		this.pk_defdoc10 = pk_defdoc10;
	}
	/**
	 * @return 返回 pk_defdoc11。
	 */
	public String getPk_defdoc11() {
		return pk_defdoc11;
	}
	/**
	 * @param pk_defdoc11 要设置的 pk_defdoc11。
	 */
	public void setPk_defdoc11(String pk_defdoc11) {
		this.pk_defdoc11 = pk_defdoc11;
	}
	/**
	 * @return 返回 pk_defdoc12。
	 */
	public String getPk_defdoc12() {
		return pk_defdoc12;
	}
	/**
	 * @param pk_defdoc12 要设置的 pk_defdoc12。
	 */
	public void setPk_defdoc12(String pk_defdoc12) {
		this.pk_defdoc12 = pk_defdoc12;
	}
	/**
	 * @return 返回 pk_defdoc13。
	 */
	public String getPk_defdoc13() {
		return pk_defdoc13;
	}
	/**
	 * @param pk_defdoc13 要设置的 pk_defdoc13。
	 */
	public void setPk_defdoc13(String pk_defdoc13) {
		this.pk_defdoc13 = pk_defdoc13;
	}
	/**
	 * @return 返回 pk_defdoc14。
	 */
	public String getPk_defdoc14() {
		return pk_defdoc14;
	}
	/**
	 * @param pk_defdoc14 要设置的 pk_defdoc14。
	 */
	public void setPk_defdoc14(String pk_defdoc14) {
		this.pk_defdoc14 = pk_defdoc14;
	}
	/**
	 * @return 返回 pk_defdoc15。
	 */
	public String getPk_defdoc15() {
		return pk_defdoc15;
	}
	/**
	 * @param pk_defdoc15 要设置的 pk_defdoc15。
	 */
	public void setPk_defdoc15(String pk_defdoc15) {
		this.pk_defdoc15 = pk_defdoc15;
	}
	/**
	 * @return 返回 pk_defdoc16。
	 */
	public String getPk_defdoc16() {
		return pk_defdoc16;
	}
	/**
	 * @param pk_defdoc16 要设置的 pk_defdoc16。
	 */
	public void setPk_defdoc16(String pk_defdoc16) {
		this.pk_defdoc16 = pk_defdoc16;
	}
	/**
	 * @return 返回 pk_defdoc17。
	 */
	public String getPk_defdoc17() {
		return pk_defdoc17;
	}
	/**
	 * @param pk_defdoc17 要设置的 pk_defdoc17。
	 */
	public void setPk_defdoc17(String pk_defdoc17) {
		this.pk_defdoc17 = pk_defdoc17;
	}
	/**
	 * @return 返回 pk_defdoc18。
	 */
	public String getPk_defdoc18() {
		return pk_defdoc18;
	}
	/**
	 * @param pk_defdoc18 要设置的 pk_defdoc18。
	 */
	public void setPk_defdoc18(String pk_defdoc18) {
		this.pk_defdoc18 = pk_defdoc18;
	}
	/**
	 * @return 返回 pk_defdoc19。
	 */
	public String getPk_defdoc19() {
		return pk_defdoc19;
	}
	/**
	 * @param pk_defdoc19 要设置的 pk_defdoc19。
	 */
	public void setPk_defdoc19(String pk_defdoc19) {
		this.pk_defdoc19 = pk_defdoc19;
	}
	/**
	 * @return 返回 pk_defdoc2。
	 */
	public String getPk_defdoc2() {
		return pk_defdoc2;
	}
	/**
	 * @param pk_defdoc2 要设置的 pk_defdoc2。
	 */
	public void setPk_defdoc2(String pk_defdoc2) {
		this.pk_defdoc2 = pk_defdoc2;
	}
	/**
	 * @return 返回 pk_defdoc20。
	 */
	public String getPk_defdoc20() {
		return pk_defdoc20;
	}
	/**
	 * @param pk_defdoc20 要设置的 pk_defdoc20。
	 */
	public void setPk_defdoc20(String pk_defdoc20) {
		this.pk_defdoc20 = pk_defdoc20;
	}
	/**
	 * @return 返回 pk_defdoc3。
	 */
	public String getPk_defdoc3() {
		return pk_defdoc3;
	}
	/**
	 * @param pk_defdoc3 要设置的 pk_defdoc3。
	 */
	public void setPk_defdoc3(String pk_defdoc3) {
		this.pk_defdoc3 = pk_defdoc3;
	}
	/**
	 * @return 返回 pk_defdoc4。
	 */
	public String getPk_defdoc4() {
		return pk_defdoc4;
	}
	/**
	 * @param pk_defdoc4 要设置的 pk_defdoc4。
	 */
	public void setPk_defdoc4(String pk_defdoc4) {
		this.pk_defdoc4 = pk_defdoc4;
	}
	/**
	 * @return 返回 pk_defdoc5。
	 */
	public String getPk_defdoc5() {
		return pk_defdoc5;
	}
	/**
	 * @param pk_defdoc5 要设置的 pk_defdoc5。
	 */
	public void setPk_defdoc5(String pk_defdoc5) {
		this.pk_defdoc5 = pk_defdoc5;
	}
	/**
	 * @return 返回 pk_defdoc6。
	 */
	public String getPk_defdoc6() {
		return pk_defdoc6;
	}
	/**
	 * @param pk_defdoc6 要设置的 pk_defdoc6。
	 */
	public void setPk_defdoc6(String pk_defdoc6) {
		this.pk_defdoc6 = pk_defdoc6;
	}
	/**
	 * @return 返回 pk_defdoc7。
	 */
	public String getPk_defdoc7() {
		return pk_defdoc7;
	}
	/**
	 * @param pk_defdoc7 要设置的 pk_defdoc7。
	 */
	public void setPk_defdoc7(String pk_defdoc7) {
		this.pk_defdoc7 = pk_defdoc7;
	}
	/**
	 * @return 返回 pk_defdoc8。
	 */
	public String getPk_defdoc8() {
		return pk_defdoc8;
	}
	/**
	 * @param pk_defdoc8 要设置的 pk_defdoc8。
	 */
	public void setPk_defdoc8(String pk_defdoc8) {
		this.pk_defdoc8 = pk_defdoc8;
	}
	/**
	 * @return 返回 pk_defdoc9。
	 */
	public String getPk_defdoc9() {
		return pk_defdoc9;
	}
	/**
	 * @param pk_defdoc9 要设置的 pk_defdoc9。
	 */
	public void setPk_defdoc9(String pk_defdoc9) {
		this.pk_defdoc9 = pk_defdoc9;
	}
	/**
	 * @return 返回 vdef11。
	 */
	public String getVdef11() {
		return vdef11;
	}
	/**
	 * @param vdef11 要设置的 vdef11。
	 */
	public void setVdef11(String vdef11) {
		this.vdef11 = vdef11;
	}
	/**
	 * @return 返回 vdef12。
	 */
	public String getVdef12() {
		return vdef12;
	}
	/**
	 * @param vdef12 要设置的 vdef12。
	 */
	public void setVdef12(String vdef12) {
		this.vdef12 = vdef12;
	}
	/**
	 * @return 返回 vdef13。
	 */
	public String getVdef13() {
		return vdef13;
	}
	/**
	 * @param vdef13 要设置的 vdef13。
	 */
	public void setVdef13(String vdef13) {
		this.vdef13 = vdef13;
	}
	/**
	 * @return 返回 vdef14。
	 */
	public String getVdef14() {
		return vdef14;
	}
	/**
	 * @param vdef14 要设置的 vdef14。
	 */
	public void setVdef14(String vdef14) {
		this.vdef14 = vdef14;
	}
	/**
	 * @return 返回 vdef15。
	 */
	public String getVdef15() {
		return vdef15;
	}
	/**
	 * @param vdef15 要设置的 vdef15。
	 */
	public void setVdef15(String vdef15) {
		this.vdef15 = vdef15;
	}
	/**
	 * @return 返回 vdef16。
	 */
	public String getVdef16() {
		return vdef16;
	}
	/**
	 * @param vdef16 要设置的 vdef16。
	 */
	public void setVdef16(String vdef16) {
		this.vdef16 = vdef16;
	}
	/**
	 * @return 返回 vdef17。
	 */
	public String getVdef17() {
		return vdef17;
	}
	/**
	 * @param vdef17 要设置的 vdef17。
	 */
	public void setVdef17(String vdef17) {
		this.vdef17 = vdef17;
	}
	/**
	 * @return 返回 vdef18。
	 */
	public String getVdef18() {
		return vdef18;
	}
	/**
	 * @param vdef18 要设置的 vdef18。
	 */
	public void setVdef18(String vdef18) {
		this.vdef18 = vdef18;
	}
	/**
	 * @return 返回 vdef19。
	 */
	public String getVdef19() {
		return vdef19;
	}
	/**
	 * @param vdef19 要设置的 vdef19。
	 */
	public void setVdef19(String vdef19) {
		this.vdef19 = vdef19;
	}
	/**
	 * @return 返回 vdef20。
	 */
	public String getVdef20() {
		return vdef20;
	}
	/**
	 * @param vdef20 要设置的 vdef20。
	 */
	public void setVdef20(String vdef20) {
		this.vdef20 = vdef20;
	}
	
	public SaleorderHVO getOldhvo() {
		return oldhvo;
	}
	
	public void setOldhvo(SaleorderHVO newOldhvo) {
		oldhvo = newOldhvo;
	}
	
	private String errMsg;
	
	public void setErrMsg(String str){
		errMsg=str;
	}
	
	public String getErrMsg(){
		return errMsg;
	}
	
}
