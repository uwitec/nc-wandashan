  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.lm.vo.classinfor;
   	
	import java.util.ArrayList;
	import nc.vo.pub.*;
	import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-8-17
 * @author author
 * @version Your Project 1.0
 */
     public class ClassBVO extends SuperVO {
           
             public String pk_class_b;
             public String vdef4;
             public String vdef7;
             public Integer dr;
             public String ccstucode;
             public String vdef2;
             public String vmemo;
             public UFDateTime ts;
             public String vdef1;
             public String reserve3;
             public String pk_defdoc6;
             public String pk_defdoc1;
             public String pk_defdoc4;
             public String vstuname;
             public String pk_class;
             public String pk_defdoc5;
             public String vdef3;
             public UFDouble reserve8;
             public String vdef9;
             public String pk_defdoc3;
             public String reserve1;
             public UFBoolean reserve16;
             public String pk_defdoc8;
             public UFDouble reserve7;
             public String pk_defdoc2;
             public UFBoolean reserve15;
             public String pk_defdoc7;
             public String vdef6;
             public String reserve2;
             public String vdef10;
             public String vdef5;
            
             public static final String  PK_CLASS_B="pk_class_b";   
             public static final String  VDEF4="vdef4";   
             public static final String  VDEF7="vdef7";   
             public static final String  DR="dr";   
             public static final String  CCSTUCODE="ccstucode";   
             public static final String  VDEF2="vdef2";   
             public static final String  VMEMO="vmemo";   
             public static final String  TS="ts";   
             public static final String  VDEF1="vdef1";   
             public static final String  RESERVE3="reserve3";   
             public static final String  PK_DEFDOC6="pk_defdoc6";   
             public static final String  PK_DEFDOC1="pk_defdoc1";   
             public static final String  PK_DEFDOC4="pk_defdoc4";   
             public static final String  VSTUNAME="vstuname";   
             public static final String  PK_CLASS="pk_class";   
             public static final String  PK_DEFDOC5="pk_defdoc5";   
             public static final String  VDEF3="vdef3";   
             public static final String  RESERVE8="reserve8";   
             public static final String  VDEF9="vdef9";   
             public static final String  PK_DEFDOC3="pk_defdoc3";   
             public static final String  RESERVE1="reserve1";   
             public static final String  RESERVE16="reserve16";   
             public static final String  PK_DEFDOC8="pk_defdoc8";   
             public static final String  RESERVE7="reserve7";   
             public static final String  PK_DEFDOC2="pk_defdoc2";   
             public static final String  RESERVE15="reserve15";   
             public static final String  PK_DEFDOC7="pk_defdoc7";   
             public static final String  VDEF6="vdef6";   
             public static final String  RESERVE2="reserve2";   
             public static final String  VDEF10="vdef10";   
             public static final String  VDEF5="vdef5";   
      
    
        /**
	   * 属性pk_class_b的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_class_b() {
		 return pk_class_b;
	  }   
	  
     /**
	   * 属性pk_class_b的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_class_b String
	   */
	public void setPk_class_b(String newPk_class_b) {
		
		pk_class_b = newPk_class_b;
	 } 	  
       
        /**
	   * 属性vdef4的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVdef4() {
		 return vdef4;
	  }   
	  
     /**
	   * 属性vdef4的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVdef4 String
	   */
	public void setVdef4(String newVdef4) {
		
		vdef4 = newVdef4;
	 } 	  
       
        /**
	   * 属性vdef7的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVdef7() {
		 return vdef7;
	  }   
	  
     /**
	   * 属性vdef7的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVdef7 String
	   */
	public void setVdef7(String newVdef7) {
		
		vdef7 = newVdef7;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性ccstucode的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getCcstucode() {
		 return ccstucode;
	  }   
	  
     /**
	   * 属性ccstucode的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newCcstucode String
	   */
	public void setCcstucode(String newCcstucode) {
		
		ccstucode = newCcstucode;
	 } 	  
       
        /**
	   * 属性vdef2的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVdef2() {
		 return vdef2;
	  }   
	  
     /**
	   * 属性vdef2的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVdef2 String
	   */
	public void setVdef2(String newVdef2) {
		
		vdef2 = newVdef2;
	 } 	  
       
        /**
	   * 属性vmemo的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVmemo() {
		 return vmemo;
	  }   
	  
     /**
	   * 属性vmemo的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVmemo String
	   */
	public void setVmemo(String newVmemo) {
		
		vmemo = newVmemo;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return UFDateTime
	   */
	 public UFDateTime getTs() {
		 return ts;
	  }   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newTs UFDateTime
	   */
	public void setTs(UFDateTime newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性vdef1的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVdef1() {
		 return vdef1;
	  }   
	  
     /**
	   * 属性vdef1的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVdef1 String
	   */
	public void setVdef1(String newVdef1) {
		
		vdef1 = newVdef1;
	 } 	  
       
        /**
	   * 属性reserve3的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getReserve3() {
		 return reserve3;
	  }   
	  
     /**
	   * 属性reserve3的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newReserve3 String
	   */
	public void setReserve3(String newReserve3) {
		
		reserve3 = newReserve3;
	 } 	  
       
        /**
	   * 属性pk_defdoc6的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_defdoc6() {
		 return pk_defdoc6;
	  }   
	  
     /**
	   * 属性pk_defdoc6的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_defdoc6 String
	   */
	public void setPk_defdoc6(String newPk_defdoc6) {
		
		pk_defdoc6 = newPk_defdoc6;
	 } 	  
       
        /**
	   * 属性pk_defdoc1的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_defdoc1() {
		 return pk_defdoc1;
	  }   
	  
     /**
	   * 属性pk_defdoc1的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_defdoc1 String
	   */
	public void setPk_defdoc1(String newPk_defdoc1) {
		
		pk_defdoc1 = newPk_defdoc1;
	 } 	  
       
        /**
	   * 属性pk_defdoc4的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_defdoc4() {
		 return pk_defdoc4;
	  }   
	  
     /**
	   * 属性pk_defdoc4的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_defdoc4 String
	   */
	public void setPk_defdoc4(String newPk_defdoc4) {
		
		pk_defdoc4 = newPk_defdoc4;
	 } 	  
       
        /**
	   * 属性vstuname的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVstuname() {
		 return vstuname;
	  }   
	  
     /**
	   * 属性vstuname的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVstuname String
	   */
	public void setVstuname(String newVstuname) {
		
		vstuname = newVstuname;
	 } 	  
       
        /**
	   * 属性pk_class的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_class() {
		 return pk_class;
	  }   
	  
     /**
	   * 属性pk_class的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_class String
	   */
	public void setPk_class(String newPk_class) {
		
		pk_class = newPk_class;
	 } 	  
       
        /**
	   * 属性pk_defdoc5的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_defdoc5() {
		 return pk_defdoc5;
	  }   
	  
     /**
	   * 属性pk_defdoc5的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_defdoc5 String
	   */
	public void setPk_defdoc5(String newPk_defdoc5) {
		
		pk_defdoc5 = newPk_defdoc5;
	 } 	  
       
        /**
	   * 属性vdef3的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVdef3() {
		 return vdef3;
	  }   
	  
     /**
	   * 属性vdef3的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVdef3 String
	   */
	public void setVdef3(String newVdef3) {
		
		vdef3 = newVdef3;
	 } 	  
       
        /**
	   * 属性reserve8的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return UFDouble
	   */
	 public UFDouble getReserve8() {
		 return reserve8;
	  }   
	  
     /**
	   * 属性reserve8的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newReserve8 UFDouble
	   */
	public void setReserve8(UFDouble newReserve8) {
		
		reserve8 = newReserve8;
	 } 	  
       
        /**
	   * 属性vdef9的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVdef9() {
		 return vdef9;
	  }   
	  
     /**
	   * 属性vdef9的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVdef9 String
	   */
	public void setVdef9(String newVdef9) {
		
		vdef9 = newVdef9;
	 } 	  
       
        /**
	   * 属性pk_defdoc3的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_defdoc3() {
		 return pk_defdoc3;
	  }   
	  
     /**
	   * 属性pk_defdoc3的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_defdoc3 String
	   */
	public void setPk_defdoc3(String newPk_defdoc3) {
		
		pk_defdoc3 = newPk_defdoc3;
	 } 	  
       
        /**
	   * 属性reserve1的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getReserve1() {
		 return reserve1;
	  }   
	  
     /**
	   * 属性reserve1的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newReserve1 String
	   */
	public void setReserve1(String newReserve1) {
		
		reserve1 = newReserve1;
	 } 	  
       
        /**
	   * 属性reserve16的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return UFBoolean
	   */
	 public UFBoolean getReserve16() {
		 return reserve16;
	  }   
	  
     /**
	   * 属性reserve16的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newReserve16 UFBoolean
	   */
	public void setReserve16(UFBoolean newReserve16) {
		
		reserve16 = newReserve16;
	 } 	  
       
        /**
	   * 属性pk_defdoc8的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_defdoc8() {
		 return pk_defdoc8;
	  }   
	  
     /**
	   * 属性pk_defdoc8的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_defdoc8 String
	   */
	public void setPk_defdoc8(String newPk_defdoc8) {
		
		pk_defdoc8 = newPk_defdoc8;
	 } 	  
       
        /**
	   * 属性reserve7的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return UFDouble
	   */
	 public UFDouble getReserve7() {
		 return reserve7;
	  }   
	  
     /**
	   * 属性reserve7的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newReserve7 UFDouble
	   */
	public void setReserve7(UFDouble newReserve7) {
		
		reserve7 = newReserve7;
	 } 	  
       
        /**
	   * 属性pk_defdoc2的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_defdoc2() {
		 return pk_defdoc2;
	  }   
	  
     /**
	   * 属性pk_defdoc2的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_defdoc2 String
	   */
	public void setPk_defdoc2(String newPk_defdoc2) {
		
		pk_defdoc2 = newPk_defdoc2;
	 } 	  
       
        /**
	   * 属性reserve15的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return UFBoolean
	   */
	 public UFBoolean getReserve15() {
		 return reserve15;
	  }   
	  
     /**
	   * 属性reserve15的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newReserve15 UFBoolean
	   */
	public void setReserve15(UFBoolean newReserve15) {
		
		reserve15 = newReserve15;
	 } 	  
       
        /**
	   * 属性pk_defdoc7的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getPk_defdoc7() {
		 return pk_defdoc7;
	  }   
	  
     /**
	   * 属性pk_defdoc7的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newPk_defdoc7 String
	   */
	public void setPk_defdoc7(String newPk_defdoc7) {
		
		pk_defdoc7 = newPk_defdoc7;
	 } 	  
       
        /**
	   * 属性vdef6的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVdef6() {
		 return vdef6;
	  }   
	  
     /**
	   * 属性vdef6的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVdef6 String
	   */
	public void setVdef6(String newVdef6) {
		
		vdef6 = newVdef6;
	 } 	  
       
        /**
	   * 属性reserve2的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getReserve2() {
		 return reserve2;
	  }   
	  
     /**
	   * 属性reserve2的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newReserve2 String
	   */
	public void setReserve2(String newReserve2) {
		
		reserve2 = newReserve2;
	 } 	  
       
        /**
	   * 属性vdef10的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVdef10() {
		 return vdef10;
	  }   
	  
     /**
	   * 属性vdef10的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVdef10 String
	   */
	public void setVdef10(String newVdef10) {
		
		vdef10 = newVdef10;
	 } 	  
       
        /**
	   * 属性vdef5的Getter方法.
	   *
	   * 创建日期:2011-8-17
	   * @return String
	   */
	 public String getVdef5() {
		 return vdef5;
	  }   
	  
     /**
	   * 属性vdef5的Setter方法.
	   *
	   * 创建日期:2011-8-17
	   * @param newVdef5 String
	   */
	public void setVdef5(String newVdef5) {
		
		vdef5 = newVdef5;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2011-8-17
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_class_b == null) {
			errFields.add(new String("pk_class_b"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2011-8-17
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 		return "pk_class";
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2011-8-17
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_class_b";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2011-8-17
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "lm_class_b";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2011-8-17
	  */
	public ClassBVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-8-17
	 * @param newPk_class_b 主键值
	 */
	 public ClassBVO(String newPk_class_b) {
		
		// 为主键字段赋值:
		 pk_class_b = newPk_class_b;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-8-17
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_class_b;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-8-17
	  * @param newPk_class_b  String    
	  */
	 public void setPrimaryKey(String newPk_class_b) {
				
				pk_class_b = newPk_class_b; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2011-8-17
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "lm_class_b"; 
				
	 } 
} 
