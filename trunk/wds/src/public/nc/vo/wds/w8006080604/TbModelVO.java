  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.wds.w8006080604;
   	
	import java.util.ArrayList;
	import nc.vo.pub.*;
	import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2010-6-28
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class TbModelVO extends SuperVO {
           
             public String ml_pk;
             public String ml_customize4;
             public String ml_customize1;
             public UFTime ts;
             public String nvote;
             public String ml_customize3;
             public String ml_mlname;
             public String ml_mlcode;
             public Integer dr;
             public String ml_customize5;
             public String ml_customize2;
             public String ml_mlsp;
            
             public static final String  ML_PK="ml_pk";   
             public static final String  ML_CUSTOMIZE4="ml_customize4";   
             public static final String  ML_CUSTOMIZE1="ml_customize1";   
             public static final String  TS="ts";   
             public static final String  NVOTE="nvote";   
             public static final String  ML_CUSTOMIZE3="ml_customize3";   
             public static final String  ML_MLNAME="ml_mlname";   
             public static final String  ML_MLCODE="ml_mlcode";   
             public static final String  DR="dr";   
             public static final String  ML_CUSTOMIZE5="ml_customize5";   
             public static final String  ML_CUSTOMIZE2="ml_customize2";   
             public static final String  ML_MLSP="ml_mlsp";   
      
    
        /**
	   * 属性ml_pk的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getMl_pk() {
		 return ml_pk;
	  }   
	  
     /**
	   * 属性ml_pk的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newMl_pk String
	   */
	public void setMl_pk(String newMl_pk) {
		
		ml_pk = newMl_pk;
	 } 	  
       
        /**
	   * 属性ml_customize4的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getMl_customize4() {
		 return ml_customize4;
	  }   
	  
     /**
	   * 属性ml_customize4的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newMl_customize4 String
	   */
	public void setMl_customize4(String newMl_customize4) {
		
		ml_customize4 = newMl_customize4;
	 } 	  
       
        /**
	   * 属性ml_customize1的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getMl_customize1() {
		 return ml_customize1;
	  }   
	  
     /**
	   * 属性ml_customize1的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newMl_customize1 String
	   */
	public void setMl_customize1(String newMl_customize1) {
		
		ml_customize1 = newMl_customize1;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return UFDateTime
	   */
	 public UFTime getTs() {
		 return ts;
	  }   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newTs UFDateTime
	   */
	public void setTs(UFTime newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性nvote的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getNvote() {
		 return nvote;
	  }   
	  
     /**
	   * 属性nvote的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newNvote String
	   */
	public void setNvote(String newNvote) {
		
		nvote = newNvote;
	 } 	  
       
        /**
	   * 属性ml_customize3的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getMl_customize3() {
		 return ml_customize3;
	  }   
	  
     /**
	   * 属性ml_customize3的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newMl_customize3 String
	   */
	public void setMl_customize3(String newMl_customize3) {
		
		ml_customize3 = newMl_customize3;
	 } 	  
       
        /**
	   * 属性ml_mlname的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getMl_mlname() {
		 return ml_mlname;
	  }   
	  
     /**
	   * 属性ml_mlname的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newMl_mlname String
	   */
	public void setMl_mlname(String newMl_mlname) {
		
		ml_mlname = newMl_mlname;
	 } 	  
       
        /**
	   * 属性ml_mlcode的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getMl_mlcode() {
		 return ml_mlcode;
	  }   
	  
     /**
	   * 属性ml_mlcode的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newMl_mlcode String
	   */
	public void setMl_mlcode(String newMl_mlcode) {
		
		ml_mlcode = newMl_mlcode;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性ml_customize5的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getMl_customize5() {
		 return ml_customize5;
	  }   
	  
     /**
	   * 属性ml_customize5的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newMl_customize5 String
	   */
	public void setMl_customize5(String newMl_customize5) {
		
		ml_customize5 = newMl_customize5;
	 } 	  
       
        /**
	   * 属性ml_customize2的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getMl_customize2() {
		 return ml_customize2;
	  }   
	  
     /**
	   * 属性ml_customize2的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newMl_customize2 String
	   */
	public void setMl_customize2(String newMl_customize2) {
		
		ml_customize2 = newMl_customize2;
	 } 	  
       
        /**
	   * 属性ml_mlsp的Getter方法.
	   *
	   * 创建日期:2010-6-28
	   * @return String
	   */
	 public String getMl_mlsp() {
		 return ml_mlsp;
	  }   
	  
     /**
	   * 属性ml_mlsp的Setter方法.
	   *
	   * 创建日期:2010-6-28
	   * @param newMl_mlsp String
	   */
	public void setMl_mlsp(String newMl_mlsp) {
		
		ml_mlsp = newMl_mlsp;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2010-6-28
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (ml_pk == null) {
			errFields.add(new String("ml_pk"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2010-6-28
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2010-6-28
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "ml_pk";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2010-6-28
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "tb_model";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2010-6-28
	  */
	public TbModelVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2010-6-28
	 * @param newMl_pk 主键值
	 */
	 public TbModelVO(String newMl_pk) {
		
		// 为主键字段赋值:
		 ml_pk = newMl_pk;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2010-6-28
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return ml_pk;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2010-6-28
	  * @param newMl_pk  String    
	  */
	 public void setPrimaryKey(String newMl_pk) {
				
				ml_pk = newMl_pk; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2010-6-28
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "tb_model"; 
				
	 } 
} 
