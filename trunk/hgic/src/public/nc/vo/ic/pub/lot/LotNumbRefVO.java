/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.vo.ic.pub.lot;

import java.util.ArrayList;

import nc.vo.scm.ic.bill.FreeVO;
import nc.vo.ic.ic001.BatchcodeVO;
import nc.vo.ic.pub.bill.SwitchObject;
import nc.vo.pub.CircularlyAccessibleValueObject;
import nc.vo.pub.NullFieldException;
import nc.vo.pub.ValidationException;
import nc.vo.pub.lang.UFDate;
import nc.vo.pub.lang.UFDouble;

/**
 * 此处插入类型说明。
 *
 * 创建日期：(2004-10-13)
 * @author：wangnj
 */
public class LotNumbRefVO extends CircularlyAccessibleValueObject {

	public String m_vbatchcode;
	public String m_corpid;
	public String m_cgeneralhid;
	public String m_cgeneralbid;
	public String m_cwarehouseid;
	public String m_cinventoryid;
	public String m_correspondhid;
	public String m_correspondbid;
	public UFDate m_dvalidate;
	public UFDouble m_noutnum;
	public UFDouble m_noutassistnum;
	public UFDouble m_ninnum;
	public UFDouble m_ninassistnum;
	public String m_cbilltypecode;
	public String m_vbillcode;
	public String m_castunitid;
	public nc.vo.scm.ic.bill.FreeVO m_freevo;
	public Integer m_iOnhandnumType = new Integer(0);
	public String m_cqualitylevelid;
	//修改人：刘家清 修改日期：2007-10-8下午02:53:19 修改原因：增加了名称显示
	public String m_cqualitylevelname;
	public UFDouble m_hsl;
	public UFDouble m_ngrossnum;
	public UFDate m_dproducedate;
	public UFDate m_scrq;
	//liuys add for 鹤岗矿业 增加供应商字段
	public String pk_cubasdoc;

	public BatchcodeVO m_batchcodevo=new BatchcodeVO();
	/**
	 *     描述上面属性的FieldObjects。主要用于系统工具中，
	 * 业务代码中不会用到下面的FieldObjects。
	 */
	
/**
 * 使用主键字段进行初始化的构造子。
 *
 * 创建日期：(2004-10-13)
 */
public LotNumbRefVO() {

}
/**
 * 使用主键进行初始化的构造子。
 *
 * 创建日期：(2004-10-13)
 * @param ??fieldNameForMethod?? 主键值
 */
public LotNumbRefVO(String newVbatchcode) {

	// 为主键字段赋值:
	m_vbatchcode = newVbatchcode;
}
/**
 * 根类Object的方法,克隆这个VO对象。
 *
 * 创建日期：(2004-10-13)
 */
public Object clone() {

	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	LotNumbRefVO lotNumbRef = (LotNumbRefVO)o;

	// 你在下面复制本VO对象的所有属性：

	return lotNumbRef;
}
/**
 * 返回数值对象的显示名称。
 *
 * 创建日期：(2004-10-13)
 * @return java.lang.String 返回数值对象的显示名称。
 */
public String getEntityName() {

	return "LotNumbRef";
}
/**
 * 返回对象标识，用来唯一定位对象。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getPrimaryKey() {

	return m_vbatchcode;
}
/**
 * 设置对象标识，用来唯一定位对象。
 *
 * 创建日期：(2004-10-13)
 * @param m_vbatchcode String
 */
public void setPrimaryKey(String newVbatchcode) {

	m_vbatchcode = newVbatchcode;
}
/**
 * 属性m_vbatchcode的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getVbatchcode() {
	return m_vbatchcode;
}
/**
 * 属性m_corpid的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getCorpid() {
	return m_corpid;
}
/**
 * 属性m_freevo的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return nc.vo.scm.ic.bill.FreeVO
 */
public nc.vo.scm.ic.bill.FreeVO getFreeVO() {
	return m_freevo;
}
/**
 * 属性m_cgeneralhid的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getCgeneralhid() {
	return m_cgeneralhid;
}
/**
 * 属性m_cgeneralbid的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getCgeneralbid() {
	return m_cgeneralbid;
}
/**
 * 属性m_cwarehouseid的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getCwarehouseid() {
	return m_cwarehouseid;
}
/**
 * 属性m_cinventoryid的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getCinventoryid() {
	return m_cinventoryid;
}
/**
 * 属性m_correspondhid的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getCorrespondhid() {
	return m_correspondhid;
}
/**
 * 属性m_correspondbid的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getCorrespondbid() {
	return m_correspondbid;
}
/**
 * 属性m_ninnum的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return UFDouble
 */
public UFDouble getNinnum() {
	return m_ninnum;
}
/**
 * 属性m_dvalidate的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return UFDate
 */
public UFDate getDvalidate() {
	return m_dvalidate;
}

public String getCqualitylevelid(){
	return m_cqualitylevelid;
}
public void setCqualitylevelid(String newCqualitylevelid){
	m_cqualitylevelid=newCqualitylevelid;
}

public String getCqualitylevelname(){
	return m_cqualitylevelname;
}
public void setCqualitylevelname(String newCqualitylevelname){
	m_cqualitylevelname=newCqualitylevelname;
}
/**
 * 属性m_noutnum的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return UFDouble
 */
public UFDouble getNoutnum() {
	return m_noutnum;
}
/**
 * 属性m_noutassistnum的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return UFDouble
 */
public UFDouble getNoutassistnum() {
	return m_noutassistnum;
}
/**
 * 属性m_ninnum的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return UFDouble
 */
public UFDouble getNgrossnum() {
	return m_ngrossnum;
}
/**
 * 属性m_ninnum的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return UFDouble
 */
public UFDouble getHsl() {
	return m_hsl;
}
/**
 * 属性m_ninassistnum的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return UFDouble
 */
public UFDouble getNinassistnum() {
	return m_ninassistnum;
}
/**
 * 属性m_cbilltypecode的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getCbilltypecode() {
	return m_cbilltypecode;
}
/**
 * 属性m_vbillcode的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getVbillcode() {
	return m_vbillcode;
}
/**
 * 属性m_castunitid的Getter方法。
 *
 * 创建日期：(2004-10-13)
 * @return String
 */
public String getCastunitid() {
	return m_castunitid;
}
/**
 * 属性m_vbatchcode的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_vbatchcode String
 */
public void setVbatchcode(String newVbatchcode) {

	m_vbatchcode = newVbatchcode;
}
/**
 * 属性m_corpid的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_corpid String
 */
public void setCorpid(String newCorpid) {

	m_corpid = newCorpid;
}
/**
 * 属性m_freevo的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param nc.vo.scm.ic.bill.FreeVO freevo
 */
public void setFreeVO(nc.vo.scm.ic.bill.FreeVO freevo) {
	if(m_freevo == null)
		m_freevo = new nc.vo.scm.ic.bill.FreeVO();
	//设置name和PK
	m_freevo.getAttributeNames();
	if(freevo != null){
		for(int i=1;i<11;i++){
			m_freevo.setAttributeValue("vfreevalue"+i,freevo.getAttributeValue("vfreevalue"+i));
			m_freevo.setAttributeValue("vfreeid"+i,freevo.getAttributeValue("vfreeid"+i));
			m_freevo.setAttributeValue("vfreename"+i,freevo.getAttributeValue("vfreename"+i));
		}
	}
}
/**
 * 属性m_cgeneralhid的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_cgeneralhid String
 */
public void setCgeneralhid(String newCgeneralhid) {

	m_cgeneralhid = newCgeneralhid;
}
/**
 * 属性m_cgeneralbid的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_cgeneralbid String
 */
public void setCgeneralbid(String newCgeneralbid) {

	m_cgeneralbid = newCgeneralbid;
}
/**
 * 属性m_cwarehouseid的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_cwarehouseid String
 */
public void setCwarehouseid(String newCwarehouseid) {

	m_cwarehouseid = newCwarehouseid;
}
/**
 * 属性m_cinventoryid的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_cinventoryid String
 */
public void setCinventoryid(String newCinventoryid) {

	m_cinventoryid = newCinventoryid;
}
/**
 * 属性m_correspondhid的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_correspondhid String
 */
public void setCorrespondhid(String newCorrespondhid) {

	m_correspondhid = newCorrespondhid;
}
/**
 * 属性m_correspondbid的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_correspondbid String
 */
public void setCorrespondbid(String newCorrespondbid) {

	m_correspondbid = newCorrespondbid;
}
/**
 * 属性m_dvalidate的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_dvalidate UFDate
 */
public void setDvalidate(UFDate newDvalidate) {

	m_dvalidate = newDvalidate;
}

/**
 * 属性m_noutnum的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_noutnum UFDouble
 */
public void setNoutnum(UFDouble newNoutnum) {

	m_noutnum = newNoutnum;
}
/**
 * 属性m_noutassistnum的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_noutassistnum UFDouble
 */
public void setNoutassistnum(UFDouble newNoutassistnum) {

	m_noutassistnum = newNoutassistnum;
}
/**
 * 属性m_ninnum的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_ninnum UFDouble
 */
public void setNinnum(UFDouble newNinnum) {

	m_ninnum = newNinnum;
}
/**
 * 属性m_ninnum的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_ninnum UFDouble
 */
public void setHsl(UFDouble newHsl) {

	m_hsl = newHsl;
}
/**
 * 属性m_ninnum的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_ninnum UFDouble
 */
public void setNgrossnum(UFDouble newNgrossnum) {

	m_ngrossnum = newNgrossnum;
}
/**
 * 属性m_ninassistnum的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_ninassistnum UFDouble
 */
public void setNinassistnum(UFDouble newNinassistnum) {

	m_ninassistnum = newNinassistnum;
}
/**
 * 属性m_cbilltypecode的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_cbilltypecode String
 */
public void setCbilltypecode(String newCbilltypecode) {

	m_cbilltypecode = newCbilltypecode;
}
/**
 * 属性m_vbillcode的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_vbillcode String
 */
public void setVbillcode(String newVbillcode) {

	m_vbillcode = newVbillcode;
}
/**
 * 属性m_castunitid的setter方法。
 *
 * 创建日期：(2004-10-13)
 * @param newM_castunitid String
 */
public void setCastunitid(String newCastunitid) {

	m_castunitid = newCastunitid;
}
/**
 * 验证对象各属性之间的数据逻辑正确性。
 *
 * 创建日期：(2004-10-13)
 * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
 *     ValidationException，对错误进行解释。
 */
public void validate() throws ValidationException {

	ArrayList errFields = new ArrayList(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
	if (m_vbatchcode == null) {
		errFields.add(new String("m_vbatchcode"));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
	message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("4008vo","UPP4008vo-000020")/*@res "下列字段不能为空："*/);
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("SCMCOMMON","UPPSCMCommon-000000")/*@res "、"*/);
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}
/**
 * <p>需要在一个循环中访问的属性的名称数组。
 * <p>
 * 创建日期：(??Date??)
 * @return java.lang.String[]
 */
public java.lang.String[] getAttributeNames() {

	return new String[]{"ionhandnumtype", "corpid", "cgeneralhid", "cgeneralbid", "cwarehouseid", "cinventoryid", "correspondhid", "correspondbid", "dvalidate", "noutnum", "noutassistnum", "ninnum", "ninassistnum", "cbilltypecode", "vbillcode", "castunitid","castunitname","vfree0","cqualitylevelid","hsl","ngrossnum","onhandnumtype","pk_invmandoc","natpnum","dproducedate","scrq","pk_cubasdoc"};
}
/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2004-10-13)
 * @param key java.lang.String
 */
public Object getAttributeValue(String attributeName) {

	if (attributeName.equals("vbatchcode")) {
		return m_vbatchcode;
	}
	else if (attributeName.equals("corpid")) {
		return m_corpid;
	}
	else if (attributeName.equals("cgeneralhid")) {
		return m_cgeneralhid;
	}
	else if (attributeName.equals("cgeneralbid")) {
		return m_cgeneralbid;
	}
	else if (attributeName.equals("cwarehouseid")) {
		return m_cwarehouseid;
	}
	else if (attributeName.equals("cinventoryid")) {
		return m_cinventoryid;
	}
	else if (attributeName.equals("correspondhid")) {
		return m_correspondhid;
	}
	else if (attributeName.equals("correspondbid")) {
		return m_correspondbid;
	}
	else if (attributeName.equals("dvalidate")) {
		return m_dvalidate;
	}
	else if (attributeName.equals("noutnum")) {
		return m_noutnum;
	}
	else if (attributeName.equals("noutassistnum")) {
		return m_noutassistnum;
	}
	else if (attributeName.equals("ninnum")) {
		return m_ninnum;
	}
	else if (attributeName.equals("ninassistnum")) {
		return m_ninassistnum;
	}
	else if (attributeName.equals("cbilltypecode")) {
		return m_cbilltypecode;
	}
	else if (attributeName.equals("vbillcode")) {
		return m_vbillcode;
	}
	else if (attributeName.equals("castunitid")) {
		return m_castunitid;
	}else if (attributeName.equals("castunitname")) {
		return m_castunitname;
	}else if (attributeName.equals("vfree0")) {
		if(m_freevo != null)
			return m_freevo.getVfree0();
		else
			return null;
	}else if(attributeName.equals("ionhandnumtype")){
		return m_iOnhandnumType;
	}else if(attributeName.equals("cqualitylevelid"))
		return m_cqualitylevelid;
	else if(attributeName.equals("cqualitylevelname"))
		return m_cqualitylevelname;
	else if(attributeName.equals("hsl"))
		return m_hsl;
	else if(attributeName.equals("ngrossnum"))
		return m_ngrossnum;
	else if(attributeName.equals("dproducedate"))
	  return m_dproducedate;
	else if(attributeName.equals("scrq"))
	  return m_dproducedate;
	else if(attributeName.equals("pk_cubasdoc"))
		return pk_cubasdoc;
	else if(attributeName.equals("onhandnumtype")){
    if(m_iOnhandnumType!=null && m_iOnhandnumType.intValue()==5)
      return "可用量";
    else if(m_iOnhandnumType!=null && m_iOnhandnumType.intValue()==0)
      return nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("4008ui","UPP4008ui-000024")/*@res "现存"*/;
    else
      return nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("4008ui","UPP4008ui-000025")/*@res "在途库存"*/;  
		//return m_iOnhandnumType.intValue() ==0 ? nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("4008ui","UPP4008ui-000024")/*@res "现存"*/:nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("4008ui","UPP4008ui-000025")/*@res "在途库存"*/;
  }else if(isBatchField(attributeName)){
		return m_batchcodevo.getAttributeValue(attributeName);
	}
	return null;
}
/**
 *  <p>对参数name对型的属性设置值。
 *  <p>
 * 创建日期：(2004-10-13)
 * @param key java.lang.String
 */
public void setAttributeValue(String name, Object value) {

	String sTrimedValue = null;
	//trimed value to String-type fields.default is null.
	if (value != null) {
		if (value instanceof String) {
			//修改 by hanwei 2004-03-23 去空格 对批次号
			sTrimedValue = ((String) value).trim();
			if (sTrimedValue.length() == 0)
				sTrimedValue = null;
		} else
			sTrimedValue = value.toString().trim();
	}

	try {
		if (name.equals("corpid")) {
			m_corpid = (String) sTrimedValue;
		} else if (name.equals("cgeneralhid")) {
			m_cgeneralhid = (String) sTrimedValue;
		} else if (name.equals("cgeneralbid")) {
			m_cgeneralbid = (String) sTrimedValue;
		} else if (name.equals("cwarehouseid")) {
			m_cwarehouseid = (String) sTrimedValue;
		} else if (name.equals("cinventoryid")) {
			m_cinventoryid = (String) sTrimedValue;
		} else if (name.equals("correspondhid")) {
			m_correspondhid = (String) sTrimedValue;
		} else if (name.equals("correspondbid")) {
			m_correspondbid = (String) sTrimedValue;
		} else if (name.equals("dvalidate")) {
			m_dvalidate = SwitchObject.switchObjToUFDate(sTrimedValue);
			m_batchcodevo.setAttributeValue(name, value);
		} else if (name.equals("noutnum")) {
			m_noutnum = SwitchObject.switchObjToUFDouble(sTrimedValue);
		} else if (name.equals("noutassistnum")) {
			m_noutassistnum = SwitchObject.switchObjToUFDouble(sTrimedValue);
		} else if (name.equals("ninnum")) {
			m_ninnum = SwitchObject.switchObjToUFDouble(sTrimedValue);
		} else if (name.equals("ninassistnum")) {
			m_ninassistnum = SwitchObject.switchObjToUFDouble(sTrimedValue);
		} else if (name.equals("cbilltypecode")) {
			m_cbilltypecode = (String) sTrimedValue;
		} else if (name.equals("vbillcode")) {
			m_vbillcode = (String) sTrimedValue;
		} else if (name.equals("castunitid")) {
			m_castunitid = (String) sTrimedValue;
		}else if (name.equals("castunitname")) {
			m_castunitname = (String) sTrimedValue;
		}  else if (name.startsWith("vfree")) {
			setFreeValue(name, sTrimedValue);
		}else if(name.equals("ionhandnumtype")){
			m_iOnhandnumType = nc.vo.ic.pub.bill.SwitchObject.switchObjToInteger(sTrimedValue);
		} else if(name.equals("hsl")){
			m_hsl=SwitchObject.switchObjToUFDouble(sTrimedValue);
		} else if(name.equals("ngrossnum")){
			m_ngrossnum=SwitchObject.switchObjToUFDouble(sTrimedValue);
		}else if (name.equals("vbatchcode")) {
			m_vbatchcode = (String) sTrimedValue;
			m_batchcodevo.setVbatchcode(sTrimedValue);
		}else if(name.equals("cqualitylevelid")){
			m_cqualitylevelid=(String)sTrimedValue;
			m_batchcodevo.setCqualitylevelid(sTrimedValue);
		}else if(name.equals("cqualitylevelname")){
			m_cqualitylevelname=(String)sTrimedValue;
			m_batchcodevo.setCqualitylevelid(sTrimedValue);
		}else if(isBatchField(name)){
			m_batchcodevo.setAttributeValue(name, value);
		}else if(name.equals("dproducedate")){
		  m_dproducedate = SwitchObject.switchObjToUFDate(sTrimedValue);
		}else if(name.equals("scrq")){
      m_dproducedate = SwitchObject.switchObjToUFDate(sTrimedValue);
		}else if(name.equals("pk_cubasdoc")){
			 pk_cubasdoc =  (String) sTrimedValue;
		}
		
	} catch (ClassCastException e) {
		throw new ClassCastException(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("SCMCOMMON","UPPSCMCommon-000005",null,new String[]{name,String.valueOf(sTrimedValue)})/*@res "数据对象赋值时{0}的数据类型转换错误！（值：{1}）"*/);
	}
}
/**
 * 功能：获得库存类型
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2005-2-2 21:55:42)
 * 修改日期，修改人，修改原因，注释标志：
 *
 * @return java.lang.Integer
 */
public java.lang.Integer getOnhandnumType() {
	return m_iOnhandnumType;
}
/**
 * 功能：设置库存类型
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2005-2-2 21:55:42)
 * 修改日期，修改人，修改原因，注释标志：
 *
 * @param newOnhandnumType java.lang.Integer
 */
public void setOnhandnumType(java.lang.Integer newOnhandnumType) {
	m_iOnhandnumType = newOnhandnumType;
}
public String m_castunitname;

/**
 * ?user>
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2005-1-5 9:17:50)
 * 修改日期，修改人，修改原因，注释标志：
 *
 * @return java.lang.String
 */
public java.lang.String getCastunitname() {
	return m_castunitname;
}

/**
 * ?user>
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2005-1-5 9:17:50)
 * 修改日期，修改人，修改原因，注释标志：
 *
 * @param newM_castunitname java.lang.String
 */
public void setCastunitname(java.lang.String newM_castunitname) {
	m_castunitname = newM_castunitname;
}

/**
 * 此处插入方法说明。
 * 功能描述:
 * 输入参数:
 * 返回值:
 * 异常处理:
 * 日期:
 *
 */
public void setFreeValue(String name,Object value) {
	if(m_freevo ==null){

		m_freevo=new FreeVO();
	}
	m_freevo.setAttributeValue(name,value);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree1(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree1(sNewValue);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree10(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree10(sNewValue);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree2(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree2(sNewValue);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree3(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree3(sNewValue);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree4(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree4(sNewValue);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree5(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree5(sNewValue);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree6(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree6(sNewValue);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree7(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree7(sNewValue);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree8(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree8(sNewValue);
}

/**
 * 属性freeitem的Getter方法。
 *
 * 创建日期：(2001-6-16)
 * @return String
 */
public void setVfree9(String sNewValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();
	m_freevo.setVfree9(sNewValue);
}

private boolean isBatchField(String name){
	if(m_batchcodevo!=null){
		String[] sAttr=m_batchcodevo.getAttributeNames();
		for(int i=0;i<sAttr.length;i++){
			if(sAttr[i].equals(name)){
				return true;
			}
		}
	}
	return false;
}
public UFDate getM_dproducedate() {
  return m_dproducedate;
}
public void setM_dproducedate(UFDate mDproducedate) {
  m_dproducedate = mDproducedate;
}
public UFDate getM_scrq() {
  return m_scrq;
}
public void setM_scrq(UFDate mScrq) {
  m_scrq = mScrq;
}
public String getPk_cubasdoc() {
	return pk_cubasdoc;
}
public void setPk_cubasdoc(String pk_cubasdoc) {
	this.pk_cubasdoc = pk_cubasdoc;
}



}