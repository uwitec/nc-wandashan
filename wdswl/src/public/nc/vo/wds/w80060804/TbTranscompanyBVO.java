  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.wds.w80060804;
   	
	import java.util.ArrayList;
	import nc.vo.pub.*;
	import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2010-6-26
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class TbTranscompanyBVO extends SuperVO {
           
             public String tcb_customize2;
             public String tcb_conemail;
             public String tcb_conpost;
             public String tcb_conqq;
             public Integer dr;
             public String tcb_confax;
             public String vnote;
             public String tcb_customize1;
             public String tc_pk;
             public String tcb_conaddress;
             public String tcb_customize5;
             public String tcb_conname;
             public String tcb_conphone2;
             public String tcb_conmobile2;
             public String tcb_conmobile;
             public String tcb_customize4;
             public String tcb_conphone;
             public UFTime ts;
             public String tcb_customize3;
             public String tcb_pk;
            
             public static final String  TCB_CUSTOMIZE2="tcb_customize2";   
             public static final String  TCB_CONEMAIL="tcb_conemail";   
             public static final String  TCB_CONPOST="tcb_conpost";   
             public static final String  TCB_CONQQ="tcb_conqq";   
             public static final String  DR="dr";   
             public static final String  TCB_CONFAX="tcb_confax";   
             public static final String  VNOTE="vnote";   
             public static final String  TCB_CUSTOMIZE1="tcb_customize1";   
             public static final String  TC_PK="tc_pk";   
             public static final String  TCB_CONADDRESS="tcb_conaddress";   
             public static final String  TCB_CUSTOMIZE5="tcb_customize5";   
             public static final String  TCB_CONNAME="tcb_conname";   
             public static final String  TCB_CONPHONE2="tcb_conphone2";   
             public static final String  TCB_CONMOBILE2="tcb_conmobile2";   
             public static final String  TCB_CONMOBILE="tcb_conmobile";   
             public static final String  TCB_CUSTOMIZE4="tcb_customize4";   
             public static final String  TCB_CONPHONE="tcb_conphone";   
             public static final String  TS="ts";   
             public static final String  TCB_CUSTOMIZE3="tcb_customize3";   
             public static final String  TCB_PK="tcb_pk";   
      
    
        /**
	   * 属性tcb_customize2的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_customize2() {
		 return tcb_customize2;
	  }   
	  
     /**
	   * 属性tcb_customize2的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_customize2 String
	   */
	public void setTcb_customize2(String newTcb_customize2) {
		
		tcb_customize2 = newTcb_customize2;
	 } 	  
       
        /**
	   * 属性tcb_conemail的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_conemail() {
		 return tcb_conemail;
	  }   
	  
     /**
	   * 属性tcb_conemail的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_conemail String
	   */
	public void setTcb_conemail(String newTcb_conemail) {
		
		tcb_conemail = newTcb_conemail;
	 } 	  
       
        /**
	   * 属性tcb_conpost的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_conpost() {
		 return tcb_conpost;
	  }   
	  
     /**
	   * 属性tcb_conpost的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_conpost String
	   */
	public void setTcb_conpost(String newTcb_conpost) {
		
		tcb_conpost = newTcb_conpost;
	 } 	  
       
        /**
	   * 属性tcb_conqq的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_conqq() {
		 return tcb_conqq;
	  }   
	  
     /**
	   * 属性tcb_conqq的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_conqq String
	   */
	public void setTcb_conqq(String newTcb_conqq) {
		
		tcb_conqq = newTcb_conqq;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性tcb_confax的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_confax() {
		 return tcb_confax;
	  }   
	  
     /**
	   * 属性tcb_confax的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_confax String
	   */
	public void setTcb_confax(String newTcb_confax) {
		
		tcb_confax = newTcb_confax;
	 } 	  
       
        /**
	   * 属性vnote的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getVnote() {
		 return vnote;
	  }   
	  
     /**
	   * 属性vnote的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newVnote String
	   */
	public void setVnote(String newVnote) {
		
		vnote = newVnote;
	 } 	  
       
        /**
	   * 属性tcb_customize1的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_customize1() {
		 return tcb_customize1;
	  }   
	  
     /**
	   * 属性tcb_customize1的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_customize1 String
	   */
	public void setTcb_customize1(String newTcb_customize1) {
		
		tcb_customize1 = newTcb_customize1;
	 } 	  
       
        /**
	   * 属性tc_pk的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTc_pk() {
		 return tc_pk;
	  }   
	  
     /**
	   * 属性tc_pk的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTc_pk String
	   */
	public void setTc_pk(String newTc_pk) {
		
		tc_pk = newTc_pk;
	 } 	  
       
        /**
	   * 属性tcb_conaddress的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_conaddress() {
		 return tcb_conaddress;
	  }   
	  
     /**
	   * 属性tcb_conaddress的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_conaddress String
	   */
	public void setTcb_conaddress(String newTcb_conaddress) {
		
		tcb_conaddress = newTcb_conaddress;
	 } 	  
       
        /**
	   * 属性tcb_customize5的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_customize5() {
		 return tcb_customize5;
	  }   
	  
     /**
	   * 属性tcb_customize5的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_customize5 String
	   */
	public void setTcb_customize5(String newTcb_customize5) {
		
		tcb_customize5 = newTcb_customize5;
	 } 	  
       
        /**
	   * 属性tcb_conname的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_conname() {
		 return tcb_conname;
	  }   
	  
     /**
	   * 属性tcb_conname的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_conname String
	   */
	public void setTcb_conname(String newTcb_conname) {
		
		tcb_conname = newTcb_conname;
	 } 	  
       
        /**
	   * 属性tcb_conphone2的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_conphone2() {
		 return tcb_conphone2;
	  }   
	  
     /**
	   * 属性tcb_conphone2的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_conphone2 String
	   */
	public void setTcb_conphone2(String newTcb_conphone2) {
		
		tcb_conphone2 = newTcb_conphone2;
	 } 	  
       
        /**
	   * 属性tcb_conmobile2的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_conmobile2() {
		 return tcb_conmobile2;
	  }   
	  
     /**
	   * 属性tcb_conmobile2的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_conmobile2 String
	   */
	public void setTcb_conmobile2(String newTcb_conmobile2) {
		
		tcb_conmobile2 = newTcb_conmobile2;
	 } 	  
       
        /**
	   * 属性tcb_conmobile的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_conmobile() {
		 return tcb_conmobile;
	  }   
	  
     /**
	   * 属性tcb_conmobile的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_conmobile String
	   */
	public void setTcb_conmobile(String newTcb_conmobile) {
		
		tcb_conmobile = newTcb_conmobile;
	 } 	  
       
        /**
	   * 属性tcb_customize4的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_customize4() {
		 return tcb_customize4;
	  }   
	  
     /**
	   * 属性tcb_customize4的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_customize4 String
	   */
	public void setTcb_customize4(String newTcb_customize4) {
		
		tcb_customize4 = newTcb_customize4;
	 } 	  
       
        /**
	   * 属性tcb_conphone的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_conphone() {
		 return tcb_conphone;
	  }   
	  
     /**
	   * 属性tcb_conphone的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_conphone String
	   */
	public void setTcb_conphone(String newTcb_conphone) {
		
		tcb_conphone = newTcb_conphone;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return UFDateTime
	   */
	 public UFTime getTs() {
		 return ts;
	  }   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTs UFDateTime
	   */
	public void setTs(UFTime newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性tcb_customize3的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_customize3() {
		 return tcb_customize3;
	  }   
	  
     /**
	   * 属性tcb_customize3的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_customize3 String
	   */
	public void setTcb_customize3(String newTcb_customize3) {
		
		tcb_customize3 = newTcb_customize3;
	 } 	  
       
        /**
	   * 属性tcb_pk的Getter方法.
	   *
	   * 创建日期:2010-6-26
	   * @return String
	   */
	 public String getTcb_pk() {
		 return tcb_pk;
	  }   
	  
     /**
	   * 属性tcb_pk的Setter方法.
	   *
	   * 创建日期:2010-6-26
	   * @param newTcb_pk String
	   */
	public void setTcb_pk(String newTcb_pk) {
		
		tcb_pk = newTcb_pk;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2010-6-26
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (tcb_pk == null) {
			errFields.add(new String("tcb_pk"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2010-6-26
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 		return "tc_pk";
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2010-6-26
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "tcb_pk";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2010-6-26
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "tb_transcompany_b";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2010-6-26
	  */
	public TbTranscompanyBVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2010-6-26
	 * @param newTcb_pk 主键值
	 */
	 public TbTranscompanyBVO(String newTcb_pk) {
		
		// 为主键字段赋值:
		 tcb_pk = newTcb_pk;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2010-6-26
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return tcb_pk;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2010-6-26
	  * @param newTcb_pk  String    
	  */
	 public void setPrimaryKey(String newTcb_pk) {
				
				tcb_pk = newTcb_pk; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2010-6-26
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "tb_transcompany_b"; 
				
	 } 
} 
