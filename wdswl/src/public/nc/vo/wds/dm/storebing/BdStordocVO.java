  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.wds.dm.storebing;
   	
	import java.util.ArrayList;
	import nc.vo.pub.*;
	import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2010-11-19
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class BdStordocVO extends SuperVO {
           
             public String pk_corp;
             public String def5;
             public String phone;
             public UFBoolean isuseretail;
             public String pk_stordoc;
             public UFBoolean isshopstor;
             public UFBoolean isgathersettle;
             public Integer dr;
             public UFBoolean iscapitalstor;
             public String storname;
             public UFTime ts;
             public UFBoolean sealflag;
             public String pk_calbody;
             public UFBoolean isdirectstore;
             public String memo;
             public UFBoolean proflag;
             public String pk_address;
             public UFBoolean csflag;
             public UFBoolean isforeignstor;
             public String def1;
             public UFBoolean gubflag;
             public UFBoolean mrpflag;
             public UFBoolean isstoreontheway;
             public UFBoolean iscalculatedinvcost;
             public UFBoolean isatpaffected;
             public String def2;
             public String storaddr;
             public String storcode;
             public String principalcode;
             public String def4;
             public String def3;
            
             public static final String  PK_CORP="pk_corp";   
             public static final String  DEF5="def5";   
             public static final String  PHONE="phone";   
             public static final String  ISUSERETAIL="isuseretail";   
             public static final String  PK_STORDOC="pk_stordoc";   
             public static final String  ISSHOPSTOR="isshopstor";   
             public static final String  ISGATHERSETTLE="isgathersettle";   
             public static final String  DR="dr";   
             public static final String  ISCAPITALSTOR="iscapitalstor";   
             public static final String  STORNAME="storname";   
             public static final String  TS="ts";   
             public static final String  SEALFLAG="sealflag";   
             public static final String  PK_CALBODY="pk_calbody";   
             public static final String  ISDIRECTSTORE="isdirectstore";   
             public static final String  MEMO="memo";   
             public static final String  PROFLAG="proflag";   
             public static final String  PK_ADDRESS="pk_address";   
             public static final String  CSFLAG="csflag";   
             public static final String  ISFOREIGNSTOR="isforeignstor";   
             public static final String  DEF1="def1";   
             public static final String  GUBFLAG="gubflag";   
             public static final String  MRPFLAG="mrpflag";   
             public static final String  ISSTOREONTHEWAY="isstoreontheway";   
             public static final String  ISCALCULATEDINVCOST="iscalculatedinvcost";   
             public static final String  ISATPAFFECTED="isatpaffected";   
             public static final String  DEF2="def2";   
             public static final String  STORADDR="storaddr";   
             public static final String  STORCODE="storcode";   
             public static final String  PRINCIPALCODE="principalcode";   
             public static final String  DEF4="def4";   
             public static final String  DEF3="def3";   
      
    
        /**
	   * 属性pk_corp的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getPk_corp() {
		 return pk_corp;
	  }   
	  
     /**
	   * 属性pk_corp的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newPk_corp String
	   */
	public void setPk_corp(String newPk_corp) {
		
		pk_corp = newPk_corp;
	 } 	  
       
        /**
	   * 属性def5的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getDef5() {
		 return def5;
	  }   
	  
     /**
	   * 属性def5的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newDef5 String
	   */
	public void setDef5(String newDef5) {
		
		def5 = newDef5;
	 } 	  
       
        /**
	   * 属性phone的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getPhone() {
		 return phone;
	  }   
	  
     /**
	   * 属性phone的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newPhone String
	   */
	public void setPhone(String newPhone) {
		
		phone = newPhone;
	 } 	  
       
        /**
	   * 属性isuseretail的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getIsuseretail() {
		 return isuseretail;
	  }   
	  
     /**
	   * 属性isuseretail的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newIsuseretail UFBoolean
	   */
	public void setIsuseretail(UFBoolean newIsuseretail) {
		
		isuseretail = newIsuseretail;
	 } 	  
       
        /**
	   * 属性pk_stordoc的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getPk_stordoc() {
		 return pk_stordoc;
	  }   
	  
     /**
	   * 属性pk_stordoc的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newPk_stordoc String
	   */
	public void setPk_stordoc(String newPk_stordoc) {
		
		pk_stordoc = newPk_stordoc;
	 } 	  
       
        /**
	   * 属性isshopstor的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getIsshopstor() {
		 return isshopstor;
	  }   
	  
     /**
	   * 属性isshopstor的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newIsshopstor UFBoolean
	   */
	public void setIsshopstor(UFBoolean newIsshopstor) {
		
		isshopstor = newIsshopstor;
	 } 	  
       
        /**
	   * 属性isgathersettle的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getIsgathersettle() {
		 return isgathersettle;
	  }   
	  
     /**
	   * 属性isgathersettle的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newIsgathersettle UFBoolean
	   */
	public void setIsgathersettle(UFBoolean newIsgathersettle) {
		
		isgathersettle = newIsgathersettle;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性iscapitalstor的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getIscapitalstor() {
		 return iscapitalstor;
	  }   
	  
     /**
	   * 属性iscapitalstor的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newIscapitalstor UFBoolean
	   */
	public void setIscapitalstor(UFBoolean newIscapitalstor) {
		
		iscapitalstor = newIscapitalstor;
	 } 	  
       
        /**
	   * 属性storname的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getStorname() {
		 return storname;
	  }   
	  
     /**
	   * 属性storname的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newStorname String
	   */
	public void setStorname(String newStorname) {
		
		storname = newStorname;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFDateTime
	   */
	 public UFTime getTs() {
		 return ts;
	  }   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newTs UFDateTime
	   */
	public void setTs(UFTime newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性sealflag的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getSealflag() {
		 return sealflag;
	  }   
	  
     /**
	   * 属性sealflag的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newSealflag UFBoolean
	   */
	public void setSealflag(UFBoolean newSealflag) {
		
		sealflag = newSealflag;
	 } 	  
       
        /**
	   * 属性pk_calbody的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getPk_calbody() {
		 return pk_calbody;
	  }   
	  
     /**
	   * 属性pk_calbody的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newPk_calbody String
	   */
	public void setPk_calbody(String newPk_calbody) {
		
		pk_calbody = newPk_calbody;
	 } 	  
       
        /**
	   * 属性isdirectstore的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getIsdirectstore() {
		 return isdirectstore;
	  }   
	  
     /**
	   * 属性isdirectstore的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newIsdirectstore UFBoolean
	   */
	public void setIsdirectstore(UFBoolean newIsdirectstore) {
		
		isdirectstore = newIsdirectstore;
	 } 	  
       
        /**
	   * 属性memo的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getMemo() {
		 return memo;
	  }   
	  
     /**
	   * 属性memo的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newMemo String
	   */
	public void setMemo(String newMemo) {
		
		memo = newMemo;
	 } 	  
       
        /**
	   * 属性proflag的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getProflag() {
		 return proflag;
	  }   
	  
     /**
	   * 属性proflag的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newProflag UFBoolean
	   */
	public void setProflag(UFBoolean newProflag) {
		
		proflag = newProflag;
	 } 	  
       
        /**
	   * 属性pk_address的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getPk_address() {
		 return pk_address;
	  }   
	  
     /**
	   * 属性pk_address的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newPk_address String
	   */
	public void setPk_address(String newPk_address) {
		
		pk_address = newPk_address;
	 } 	  
       
        /**
	   * 属性csflag的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getCsflag() {
		 return csflag;
	  }   
	  
     /**
	   * 属性csflag的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newCsflag UFBoolean
	   */
	public void setCsflag(UFBoolean newCsflag) {
		
		csflag = newCsflag;
	 } 	  
       
        /**
	   * 属性isforeignstor的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getIsforeignstor() {
		 return isforeignstor;
	  }   
	  
     /**
	   * 属性isforeignstor的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newIsforeignstor UFBoolean
	   */
	public void setIsforeignstor(UFBoolean newIsforeignstor) {
		
		isforeignstor = newIsforeignstor;
	 } 	  
       
        /**
	   * 属性def1的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getDef1() {
		 return def1;
	  }   
	  
     /**
	   * 属性def1的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newDef1 String
	   */
	public void setDef1(String newDef1) {
		
		def1 = newDef1;
	 } 	  
       
        /**
	   * 属性gubflag的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getGubflag() {
		 return gubflag;
	  }   
	  
     /**
	   * 属性gubflag的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newGubflag UFBoolean
	   */
	public void setGubflag(UFBoolean newGubflag) {
		
		gubflag = newGubflag;
	 } 	  
       
        /**
	   * 属性mrpflag的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getMrpflag() {
		 return mrpflag;
	  }   
	  
     /**
	   * 属性mrpflag的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newMrpflag UFBoolean
	   */
	public void setMrpflag(UFBoolean newMrpflag) {
		
		mrpflag = newMrpflag;
	 } 	  
       
        /**
	   * 属性isstoreontheway的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getIsstoreontheway() {
		 return isstoreontheway;
	  }   
	  
     /**
	   * 属性isstoreontheway的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newIsstoreontheway UFBoolean
	   */
	public void setIsstoreontheway(UFBoolean newIsstoreontheway) {
		
		isstoreontheway = newIsstoreontheway;
	 } 	  
       
        /**
	   * 属性iscalculatedinvcost的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getIscalculatedinvcost() {
		 return iscalculatedinvcost;
	  }   
	  
     /**
	   * 属性iscalculatedinvcost的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newIscalculatedinvcost UFBoolean
	   */
	public void setIscalculatedinvcost(UFBoolean newIscalculatedinvcost) {
		
		iscalculatedinvcost = newIscalculatedinvcost;
	 } 	  
       
        /**
	   * 属性isatpaffected的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return UFBoolean
	   */
	 public UFBoolean getIsatpaffected() {
		 return isatpaffected;
	  }   
	  
     /**
	   * 属性isatpaffected的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newIsatpaffected UFBoolean
	   */
	public void setIsatpaffected(UFBoolean newIsatpaffected) {
		
		isatpaffected = newIsatpaffected;
	 } 	  
       
        /**
	   * 属性def2的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getDef2() {
		 return def2;
	  }   
	  
     /**
	   * 属性def2的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newDef2 String
	   */
	public void setDef2(String newDef2) {
		
		def2 = newDef2;
	 } 	  
       
        /**
	   * 属性storaddr的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getStoraddr() {
		 return storaddr;
	  }   
	  
     /**
	   * 属性storaddr的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newStoraddr String
	   */
	public void setStoraddr(String newStoraddr) {
		
		storaddr = newStoraddr;
	 } 	  
       
        /**
	   * 属性storcode的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getStorcode() {
		 return storcode;
	  }   
	  
     /**
	   * 属性storcode的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newStorcode String
	   */
	public void setStorcode(String newStorcode) {
		
		storcode = newStorcode;
	 } 	  
       
        /**
	   * 属性principalcode的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getPrincipalcode() {
		 return principalcode;
	  }   
	  
     /**
	   * 属性principalcode的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newPrincipalcode String
	   */
	public void setPrincipalcode(String newPrincipalcode) {
		
		principalcode = newPrincipalcode;
	 } 	  
       
        /**
	   * 属性def4的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getDef4() {
		 return def4;
	  }   
	  
     /**
	   * 属性def4的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newDef4 String
	   */
	public void setDef4(String newDef4) {
		
		def4 = newDef4;
	 } 	  
       
        /**
	   * 属性def3的Getter方法.
	   *
	   * 创建日期:2010-11-19
	   * @return String
	   */
	 public String getDef3() {
		 return def3;
	  }   
	  
     /**
	   * 属性def3的Setter方法.
	   *
	   * 创建日期:2010-11-19
	   * @param newDef3 String
	   */
	public void setDef3(String newDef3) {
		
		def3 = newDef3;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2010-11-19
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_corp == null) {
			errFields.add(new String("pk_corp"));
			  }	
	   		if (isuseretail == null) {
			errFields.add(new String("isuseretail"));
			  }	
	   		if (pk_stordoc == null) {
			errFields.add(new String("pk_stordoc"));
			  }	
	   		if (isshopstor == null) {
			errFields.add(new String("isshopstor"));
			  }	
	   		if (storname == null) {
			errFields.add(new String("storname"));
			  }	
	   		if (sealflag == null) {
			errFields.add(new String("sealflag"));
			  }	
	   		if (pk_calbody == null) {
			errFields.add(new String("pk_calbody"));
			  }	
	   		if (isdirectstore == null) {
			errFields.add(new String("isdirectstore"));
			  }	
	   		if (proflag == null) {
			errFields.add(new String("proflag"));
			  }	
	   		if (csflag == null) {
			errFields.add(new String("csflag"));
			  }	
	   		if (gubflag == null) {
			errFields.add(new String("gubflag"));
			  }	
	   		if (mrpflag == null) {
			errFields.add(new String("mrpflag"));
			  }	
	   		if (isstoreontheway == null) {
			errFields.add(new String("isstoreontheway"));
			  }	
	   		if (iscalculatedinvcost == null) {
			errFields.add(new String("iscalculatedinvcost"));
			  }	
	   		if (isatpaffected == null) {
			errFields.add(new String("isatpaffected"));
			  }	
	   		if (storcode == null) {
			errFields.add(new String("storcode"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2010-11-19
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2010-11-19
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_stordoc";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2010-11-19
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "bd_stordoc";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2010-11-19
	  */
	public BdStordocVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2010-11-19
	 * @param newPk_stordoc 主键值
	 */
	 public BdStordocVO(String newPk_stordoc) {
		
		// 为主键字段赋值:
		 pk_stordoc = newPk_stordoc;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2010-11-19
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_stordoc;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2010-11-19
	  * @param newPk_stordoc  String    
	  */
	 public void setPrimaryKey(String newPk_stordoc) {
				
				pk_stordoc = newPk_stordoc; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2010-11-19
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "bd_stordoc"; 
				
	 } 
} 
