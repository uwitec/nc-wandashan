  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.wds.load;
   	
	import java.util.ArrayList;

import nc.vo.pub.NullFieldException;
import nc.vo.pub.SuperVO;
import nc.vo.pub.ValidationException;
import nc.vo.pub.lang.UFBoolean;
import nc.vo.pub.lang.UFDateTime;
import nc.vo.pub.lang.UFDouble;
	
/**
 * <b> 装卸费价格VO </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-4-28
 * @author author
 * @version Your Project 1.0
 */
     public class LoadpriceVO extends SuperVO {
           
             /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
			public String pk_invbasdoc;
             public String pk_corp;
             public UFDouble nloadprice;//装货价格
             public UFDateTime ts;
             public String pk_loadprice;//主键
             public UFDouble ncodeprice;//采码价格
             public String pk_invmandoc;
             public Integer dr;
             public UFBoolean fiscoded;//是否采码
             public UFDouble nunloadprice;//卸货价格
             public UFDouble ntagprice;//贴签价格
             
             public String invcode;//存货编码
             public String invname;//存货名称
             
            
             public static final String  PK_INVBASDOC="pk_invbasdoc";   
             public static final String  PK_CORP="pk_corp";   
             public static final String  NLOADPRICE="nloadprice";   
             public static final String  TS="ts";   
             public static final String  PK_LOADPRICE="pk_loadprice";   
             public static final String  NCODEPRICE="ncodeprice";   
             public static final String  PK_INVMANDOC="pk_invmandoc";   
             public static final String  DR="dr";   
             public static final String  FISCODED="fiscoded";   
             public static final String  NUNLOADPRICE="nunloadprice";   
             public static final String  NTAGPRICE="ntagprice";   
      
    
        /**
	   * 属性pk_invbasdoc的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return String
	   */
	 public String getPk_invbasdoc() {
		 return pk_invbasdoc;
	  }   
	  
     /**
	   * 属性pk_invbasdoc的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newPk_invbasdoc String
	   */
	public void setPk_invbasdoc(String newPk_invbasdoc) {
		
		pk_invbasdoc = newPk_invbasdoc;
	 } 	  
       
        /**
	   * 属性pk_corp的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return String
	   */
	 public String getPk_corp() {
		 return pk_corp;
	  }   
	  
     /**
	   * 属性pk_corp的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newPk_corp String
	   */
	public void setPk_corp(String newPk_corp) {
		
		pk_corp = newPk_corp;
	 } 	  
       
        /**
	   * 属性nloadprice的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return UFDouble
	   */
	 public UFDouble getNloadprice() {
		 return nloadprice;
	  }   
	  
     /**
	   * 属性nloadprice的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newNloadprice UFDouble
	   */
	public void setNloadprice(UFDouble newNloadprice) {
		
		nloadprice = newNloadprice;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return UFDateTime
	   */
	 public UFDateTime getTs() {
		 return ts;
	  }   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newTs UFDateTime
	   */
	public void setTs(UFDateTime newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性pk_loadprice的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return String
	   */
	 public String getPk_loadprice() {
		 return pk_loadprice;
	  }   
	  
     /**
	   * 属性pk_loadprice的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newPk_loadprice String
	   */
	public void setPk_loadprice(String newPk_loadprice) {
		
		pk_loadprice = newPk_loadprice;
	 } 	  
       
        /**
	   * 属性ncodeprice的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return UFDouble
	   */
	 public UFDouble getNcodeprice() {
		 return ncodeprice;
	  }   
	  
     /**
	   * 属性ncodeprice的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newNcodeprice UFDouble
	   */
	public void setNcodeprice(UFDouble newNcodeprice) {
		
		ncodeprice = newNcodeprice;
	 } 	  
       
        /**
	   * 属性pk_invmandoc的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return String
	   */
	 public String getPk_invmandoc() {
		 return pk_invmandoc;
	  }   
	  
     /**
	   * 属性pk_invmandoc的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newPk_invmandoc String
	   */
	public void setPk_invmandoc(String newPk_invmandoc) {
		
		pk_invmandoc = newPk_invmandoc;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性fiscoded的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return UFBoolean
	   */
	 public UFBoolean getFiscoded() {
		 return fiscoded;
	  }   
	  
     /**
	   * 属性fiscoded的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newFiscoded UFBoolean
	   */
	public void setFiscoded(UFBoolean newFiscoded) {
		
		fiscoded = newFiscoded;
	 } 	  
       
        /**
	   * 属性nunloadprice的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return UFDouble
	   */
	 public UFDouble getNunloadprice() {
		 return nunloadprice;
	  }   
	  
     /**
	   * 属性nunloadprice的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newNunloadprice UFDouble
	   */
	public void setNunloadprice(UFDouble newNunloadprice) {
		
		nunloadprice = newNunloadprice;
	 } 	  
       
        /**
	   * 属性ntagprice的Getter方法.
	   *
	   * 创建日期:2011-4-28
	   * @return UFDouble
	   */
	 public UFDouble getNtagprice() {
		 return ntagprice;
	  }   
	  
     /**
	   * 属性ntagprice的Setter方法.
	   *
	   * 创建日期:2011-4-28
	   * @param newNtagprice UFDouble
	   */
	public void setNtagprice(UFDouble newNtagprice) {
		
		ntagprice = newNtagprice;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2011-4-28
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_loadprice == null) {
			errFields.add(new String("pk_loadprice"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2011-4-28
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2011-4-28
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_loadprice";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2011-4-28
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "wds_loadprice";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2011-4-28
	  */
	public LoadpriceVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-4-28
	 * @param newPk_loadprice 主键值
	 */
	 public LoadpriceVO(String newPk_loadprice) {
		
		// 为主键字段赋值:
		 pk_loadprice = newPk_loadprice;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-28
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_loadprice;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-28
	  * @param newPk_loadprice  String    
	  */
	 public void setPrimaryKey(String newPk_loadprice) {
				
				pk_loadprice = newPk_loadprice; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2011-4-28
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "wds_loadprice"; 
				
	 }

	public String getInvcode() {
		return invcode;
	}

	public void setInvcode(String invcode) {
		this.invcode = invcode;
	}

	public String getInvname() {
		return invname;
	}

	public void setInvname(String invname) {
		this.invname = invname;
	} 
} 
